{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.100168,
     "end_time": "2021-03-08T20:05:47.249093",
     "exception": false,
     "start_time": "2021-03-08T20:05:47.148925",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    " # Sentiment Analyse + Deep Learn - Amazon App "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.096346,
     "end_time": "2021-03-08T20:05:47.440063",
     "exception": false,
     "start_time": "2021-03-08T20:05:47.343717",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Special Thanks\n",
    "\n",
    "Before starting, I would like to thank two project writers that were fundamental to this project to be accomplished.\n",
    "[Usman Malik](https://twitter.com/usman_malikk), the writer of [Python for NLP: Multi-label Text Classification with Keras](https://stackabuse.com/python-for-nlp-multi-label-text-classification-with-keras/) and also [Thiago Panini](https://www.linkedin.com/in/thiago-panini/) that wrote this amazing golden \n",
    "medal notebook [E-Commerce Sentiment Analysis: EDA + Viz + NLP](https://www.kaggle.com/thiagopanini/e-commerce-sentiment-analysis-eda-viz-nlp) here on Kaggle.\n",
    "\n",
    "For sure you guys are not helping just myself! Thank you for sharing! üôèüèª"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.094817,
     "end_time": "2021-03-08T20:05:47.629454",
     "exception": false,
     "start_time": "2021-03-08T20:05:47.534637",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<a id=\"introduction\"></a>\n",
    "# 1 - Introduction"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.094857,
     "end_time": "2021-03-08T20:05:47.821271",
     "exception": false,
     "start_time": "2021-03-08T20:05:47.726414",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "There is a lot of information available in the text format on the web. Reading that we can understand the sentiment about websites/products/brands in public tweets or in a review publicaed.\n",
    "\n",
    "However if you have the mission of getting and evaluating the users' feedback and you are going to live more thar 200 years, maybe you have enough time to read all reviews in the App's Stores. Otherwise, teach the computer to do it for you will save your life!\n",
    "\n",
    "The objective of the project is to extract, manipulate and create a good deep learning model to understand the user's sentiments classifying texts sent by a human being into Positive, Neutral and Negative.\n",
    "\n",
    "\n",
    "Have fun :)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.094357,
     "end_time": "2021-03-08T20:05:48.011522",
     "exception": false,
     "start_time": "2021-03-08T20:05:47.917165",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<a id=\"data\"></a>\n",
    "# 2 - Data "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.096281,
     "end_time": "2021-03-08T20:05:48.203381",
     "exception": false,
     "start_time": "2021-03-08T20:05:48.107100",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "\n",
    "In this project we will use the english reviews about Amazon Shopping App available on Apple Store and Playstore. We extracted the data using **Google_Play_Scraper** and **App_Store_Scraper API** and will be merged.\n",
    "\n",
    "The DataFrame has 2 columns, the **'Review'** columns (str) and the **'Scores'** column (int) the rating that goes from 1 to 5.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.094425,
     "end_time": "2021-03-08T20:05:48.392320",
     "exception": false,
     "start_time": "2021-03-08T20:05:48.297895",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<a id=\"methodology\"></a>\n",
    "# 3 - Methodology "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.094662,
     "end_time": "2021-03-08T20:05:48.583336",
     "exception": false,
     "start_time": "2021-03-08T20:05:48.488674",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "To find the best Multi-label Text Classification model for our data set, first we will preprocess our text. To do that we will build a Pipeline with functions for Regular Expressions, Stop Words Removal and Lemmatize Process. To have a good overall understanding about our data, we are going to plot the communs N Gram for each sentiment, plot the distribution of the sentiments and a Words Cloud for each sentiment.\n",
    "Before modeling we will split in test and train, vectorize, balance the dataset, create a few functions for model evaluation so then we will create a neural network for a multilabel classification and finely we will create a function that uses the pipeline and apply the mode. So then, we will show the prediction and the percentages into any review added. \n",
    "\n",
    "* For manipulation and analyze the data we are going to use the **Pandas** and **Numpy** libraries.\n",
    "* For **Data Extraction** the data from Google Play and App Store store we are going to use **Google_Play_Scraper API** and **App_Dtore_Scraper API** respectively.\n",
    "* We will use **RE, Unidecode** and **NLTK** libraries for **Text Processing**.\n",
    "* For **lemmatization** we will nltk.stem library and the module  **WordNetLemmatizer** .\n",
    "* The **nltk.corpus** library we will use the module **Stopwords** to remove the english stop words.\n",
    "* For the **Pipeline** we are going to use **Sklearn** library, **Base Estimator** and **Transformer Mixin** modules.\n",
    "* For a nice and interactive plot we will use **make_subplots, graph_objects** and **express** modules from **Ploty** library.\n",
    "* For the **Word Cloud** we will use the module **WordCloud** from **Matplotlib.pyplot**.\n",
    "* To count the n grams for each sentiment we are going to use **sklearn.feature_extraction.text** librarie and  **CountVectorizer**  module.\n",
    "* For split in train and test we will use **train_test_split** module from **sklearn.model_selection** library. (As always)\n",
    "* For **Embedding** we will need **Tensorflow. Keras** library, **Tokenizer** and **Sequence Pad_Sequences** modules for applying the **GloVe** method.\n",
    "* For **Balancing** we will use from **imblearn**library and  **RandomOverSampler** module.\n",
    "* For **Feature selection**, we are going to use **Sklearn feature selection** library and  **F_classif** ,**Select K Best** modules\n",
    "* For **Evaluation Metrics** we use functions to **calculate manually** the **Precision, Recall** and **F1 score**, using **backends** module from **tensorflow Keras** library.\n",
    "* For the **Neural Network** we are going to use **tensorflow.Keras** library and modules **Model, Dense, LSTM, Input** and **Embedding.**\n",
    "* For plot the model we will use from **plot_model** module from **tensorflow.keras.utils** library.\n",
    "* Again to plot the history of the model on the training set, on the validation set and the on the final prediction labels we are going to use **matplotlib** library.\n",
    " \n",
    "\n",
    "\n",
    "Let's get started!\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.094603,
     "end_time": "2021-03-08T20:05:48.773041",
     "exception": false,
     "start_time": "2021-03-08T20:05:48.678438",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<a id=\"DE\"></a>\n",
    "# 4 - Data Extraction"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.0979,
     "end_time": "2021-03-08T20:05:48.965251",
     "exception": false,
     "start_time": "2021-03-08T20:05:48.867351",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "First of all, we will scrape the reviews and the scores of Amazon from the apps stores for apple users and Play Store for android users.\n",
    " \n",
    " To do that we will use two api that make this process easy. Google_Play_Scraper API and App_Dtore_Scraper API.\n",
    " After scrapping\n",
    " \n",
    " After scraping the reviews and score, we will append the two dfs and check the data.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:05:49.161090Z",
     "iopub.status.busy": "2021-03-08T20:05:49.160041Z",
     "iopub.status.idle": "2021-03-08T20:05:49.163576Z",
     "shell.execute_reply": "2021-03-08T20:05:49.162896Z"
    },
    "papermill": {
     "duration": 0.103498,
     "end_time": "2021-03-08T20:05:49.163776",
     "exception": false,
     "start_time": "2021-03-08T20:05:49.060278",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.093883,
     "end_time": "2021-03-08T20:05:49.353164",
     "exception": false,
     "start_time": "2021-03-08T20:05:49.259281",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<a id=\"WS\"></a>\n",
    "## 4.1 - Web Scraping"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.093397,
     "end_time": "2021-03-08T20:05:49.540813",
     "exception": false,
     "start_time": "2021-03-08T20:05:49.447416",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Play Store Scraper"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:05:49.747884Z",
     "iopub.status.busy": "2021-03-08T20:05:49.733670Z",
     "iopub.status.idle": "2021-03-08T20:06:00.371145Z",
     "shell.execute_reply": "2021-03-08T20:06:00.370573Z"
    },
    "papermill": {
     "duration": 10.736612,
     "end_time": "2021-03-08T20:06:00.371300",
     "exception": false,
     "start_time": "2021-03-08T20:05:49.634688",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting google-play-scraper\r\n",
      "  Downloading google-play-scraper-0.1.2.tar.gz (49 kB)\r\n",
      "\u001b[K     |‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 49 kB 481 kB/s \r\n",
      "\u001b[?25hBuilding wheels for collected packages: google-play-scraper\r\n",
      "  Building wheel for google-play-scraper (setup.py) ... \u001b[?25l-\b \b\\\b \bdone\r\n",
      "\u001b[?25h  Created wheel for google-play-scraper: filename=google_play_scraper-0.1.2-py3-none-any.whl size=22279 sha256=3aa65d4bb23f47597e627db4cf381e469e81ba6d575e3a0ee22069441da93be9\r\n",
      "  Stored in directory: /root/.cache/pip/wheels/ae/25/3c/74d577014ad142080efe0060b6693b83f55f28056b1a023a4d\r\n",
      "Successfully built google-play-scraper\r\n",
      "Installing collected packages: google-play-scraper\r\n",
      "Successfully installed google-play-scraper-0.1.2\r\n"
     ]
    }
   ],
   "source": [
    "! pip install google-play-scraper"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:06:00.573294Z",
     "iopub.status.busy": "2021-03-08T20:06:00.572578Z",
     "iopub.status.idle": "2021-03-08T20:06:00.582186Z",
     "shell.execute_reply": "2021-03-08T20:06:00.581460Z"
    },
    "papermill": {
     "duration": 0.112333,
     "end_time": "2021-03-08T20:06:00.582341",
     "exception": false,
     "start_time": "2021-03-08T20:06:00.470008",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from google_play_scraper import Sort, reviews_all"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:06:00.785671Z",
     "iopub.status.busy": "2021-03-08T20:06:00.784945Z",
     "iopub.status.idle": "2021-03-08T20:06:29.656785Z",
     "shell.execute_reply": "2021-03-08T20:06:29.655752Z"
    },
    "papermill": {
     "duration": 28.976639,
     "end_time": "2021-03-08T20:06:29.656974",
     "exception": false,
     "start_time": "2021-03-08T20:06:00.680335",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "result = reviews_all(\n",
    "    'com.amazon.mShop.android.shopping',\n",
    "    sleep_milliseconds=0.010, # defaults to 0\n",
    "    lang='en', # defaults to 'en'\n",
    "    country='us', # defaults to 'us'\n",
    "    sort=Sort.MOST_RELEVANT, # defaults to Sort.MOST_RELEVANT\n",
    "    filter_score_with= None # defaults to None(means all score)\n",
    ")\n",
    "\n",
    "result = pd.DataFrame(result)\n",
    "\n",
    "amazon_ps = pd.DataFrame()\n",
    "amazon_ps['reviews']=result['content']\n",
    "amazon_ps['score']= result['score']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.098139,
     "end_time": "2021-03-08T20:06:29.852945",
     "exception": false,
     "start_time": "2021-03-08T20:06:29.754806",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### App Store Scraper"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:06:30.058358Z",
     "iopub.status.busy": "2021-03-08T20:06:30.054560Z",
     "iopub.status.idle": "2021-03-08T20:06:38.333798Z",
     "shell.execute_reply": "2021-03-08T20:06:38.333242Z"
    },
    "papermill": {
     "duration": 8.382458,
     "end_time": "2021-03-08T20:06:38.333975",
     "exception": false,
     "start_time": "2021-03-08T20:06:29.951517",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting app-store-scraper\r\n",
      "  Downloading app_store_scraper-0.3.5-py3-none-any.whl (8.3 kB)\r\n",
      "Collecting requests==2.23.0\r\n",
      "  Downloading requests-2.23.0-py2.py3-none-any.whl (58 kB)\r\n",
      "\u001b[K     |‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 58 kB 559 kB/s \r\n",
      "\u001b[?25hRequirement already satisfied: certifi>=2017.4.17 in /opt/conda/lib/python3.7/site-packages (from requests==2.23.0->app-store-scraper) (2020.12.5)\r\n",
      "Requirement already satisfied: idna<3,>=2.5 in /opt/conda/lib/python3.7/site-packages (from requests==2.23.0->app-store-scraper) (2.10)\r\n",
      "Collecting urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1\r\n",
      "  Downloading urllib3-1.25.11-py2.py3-none-any.whl (127 kB)\r\n",
      "\u001b[K     |‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà| 127 kB 1.0 MB/s \r\n",
      "\u001b[?25hRequirement already satisfied: chardet<4,>=3.0.2 in /opt/conda/lib/python3.7/site-packages (from requests==2.23.0->app-store-scraper) (3.0.4)\r\n",
      "Installing collected packages: urllib3, requests, app-store-scraper\r\n",
      "  Attempting uninstall: urllib3\r\n",
      "    Found existing installation: urllib3 1.26.2\r\n",
      "    Uninstalling urllib3-1.26.2:\r\n",
      "      Successfully uninstalled urllib3-1.26.2\r\n",
      "  Attempting uninstall: requests\r\n",
      "    Found existing installation: requests 2.25.1\r\n",
      "    Uninstalling requests-2.25.1:\r\n",
      "      Successfully uninstalled requests-2.25.1\r\n",
      "\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\r\n",
      "conda 4.9.2 requires ruamel_yaml>=0.11.14, which is not installed.\r\n",
      "osmnx 1.0.1 requires requests>=2.25, but you have requests 2.23.0 which is incompatible.\r\n",
      "jupyterlab-git 0.11.0 requires nbdime<2.0.0,>=1.1.0, but you have nbdime 2.1.0 which is incompatible.\r\n",
      "earthengine-api 0.1.252 requires google-api-python-client>=1.12.1, but you have google-api-python-client 1.8.0 which is incompatible.\r\n",
      "aiobotocore 1.2.1 requires botocore<1.19.53,>=1.19.52, but you have botocore 1.20.11 which is incompatible.\u001b[0m\r\n",
      "Successfully installed app-store-scraper-0.3.5 requests-2.23.0 urllib3-1.25.11\r\n"
     ]
    }
   ],
   "source": [
    "! pip install app-store-scraper"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:06:38.545044Z",
     "iopub.status.busy": "2021-03-08T20:06:38.544362Z",
     "iopub.status.idle": "2021-03-08T20:06:38.551666Z",
     "shell.execute_reply": "2021-03-08T20:06:38.551127Z"
    },
    "papermill": {
     "duration": 0.114695,
     "end_time": "2021-03-08T20:06:38.551822",
     "exception": false,
     "start_time": "2021-03-08T20:06:38.437127",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from app_store_scraper import AppStore"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:06:38.768364Z",
     "iopub.status.busy": "2021-03-08T20:06:38.765416Z",
     "iopub.status.idle": "2021-03-08T20:35:17.072043Z",
     "shell.execute_reply": "2021-03-08T20:35:17.071282Z"
    },
    "papermill": {
     "duration": 1718.417309,
     "end_time": "2021-03-08T20:35:17.072210",
     "exception": false,
     "start_time": "2021-03-08T20:06:38.654901",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "amazon = AppStore(country='us', app_name='amazon', app_id=297606951)\n",
    "results = amazon.review(sleep=0.010)\n",
    "\n",
    "results = pd.DataFrame(amazon.reviews)\n",
    "\n",
    "amazon_as = pd.DataFrame()\n",
    "amazon_as['reviews'] = results['review']\n",
    "amazon_as['score'] = results['rating']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:35:17.290149Z",
     "iopub.status.busy": "2021-03-08T20:35:17.289439Z",
     "iopub.status.idle": "2021-03-08T20:35:17.294095Z",
     "shell.execute_reply": "2021-03-08T20:35:17.294845Z"
    },
    "papermill": {
     "duration": 0.115736,
     "end_time": "2021-03-08T20:35:17.295107",
     "exception": false,
     "start_time": "2021-03-08T20:35:17.179371",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " Play Store\n",
      "Amazon -  15721\n",
      "\n",
      " Apple store\n",
      "Amazon -  35140\n"
     ]
    }
   ],
   "source": [
    "# PlayStore\n",
    "print(' Play Store')\n",
    "print(\"Amazon - \",amazon_ps.shape[0])\n",
    "\n",
    "# Apple Store\n",
    "print('\\n','Apple store')\n",
    "print(\"Amazon - \",amazon_as.shape[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:35:17.509801Z",
     "iopub.status.busy": "2021-03-08T20:35:17.509157Z",
     "iopub.status.idle": "2021-03-08T20:35:17.518067Z",
     "shell.execute_reply": "2021-03-08T20:35:17.518531Z"
    },
    "papermill": {
     "duration": 0.119234,
     "end_time": "2021-03-08T20:35:17.518721",
     "exception": false,
     "start_time": "2021-03-08T20:35:17.399487",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Append\n",
    "df = amazon_ps.append(amazon_as)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:35:17.730356Z",
     "iopub.status.busy": "2021-03-08T20:35:17.729681Z",
     "iopub.status.idle": "2021-03-08T20:35:17.735353Z",
     "shell.execute_reply": "2021-03-08T20:35:17.734815Z"
    },
    "papermill": {
     "duration": 0.11341,
     "end_time": "2021-03-08T20:35:17.735503",
     "exception": false,
     "start_time": "2021-03-08T20:35:17.622093",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Amazon -  50,861\n"
     ]
    }
   ],
   "source": [
    "print(\"Amazon - \",(f\"{df.shape[0]:,}\"))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.103116,
     "end_time": "2021-03-08T20:35:17.942927",
     "exception": false,
     "start_time": "2021-03-08T20:35:17.839811",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<a id=\"Dc\"></a>\n",
    "## 4.2 - Data Check"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:35:18.169049Z",
     "iopub.status.busy": "2021-03-08T20:35:18.168351Z",
     "iopub.status.idle": "2021-03-08T20:35:18.186032Z",
     "shell.execute_reply": "2021-03-08T20:35:18.185018Z"
    },
    "papermill": {
     "duration": 0.138553,
     "end_time": "2021-03-08T20:35:18.186244",
     "exception": false,
     "start_time": "2021-03-08T20:35:18.047691",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 50861 entries, 0 to 35139\n",
      "Data columns (total 2 columns):\n",
      " #   Column   Non-Null Count  Dtype \n",
      "---  ------   --------------  ----- \n",
      " 0   reviews  50861 non-null  object\n",
      " 1   score    50861 non-null  int64 \n",
      "dtypes: int64(1), object(1)\n",
      "memory usage: 1.2+ MB\n"
     ]
    }
   ],
   "source": [
    "df.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:35:18.417819Z",
     "iopub.status.busy": "2021-03-08T20:35:18.416824Z",
     "iopub.status.idle": "2021-03-08T20:35:18.430480Z",
     "shell.execute_reply": "2021-03-08T20:35:18.429973Z"
    },
    "papermill": {
     "duration": 0.127344,
     "end_time": "2021-03-08T20:35:18.430636",
     "exception": false,
     "start_time": "2021-03-08T20:35:18.303292",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>reviews</th>\n",
       "      <th>score</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>It's become really difficult to find quality i...</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>I love shopping on Amazon. In all the years th...</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>I love Amazon. They provide excellent customer...</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Would really like there to be a receipt for or...</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Amazon is my best friend! I rarely have to go ...</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                             reviews  score\n",
       "0  It's become really difficult to find quality i...      1\n",
       "1  I love shopping on Amazon. In all the years th...      5\n",
       "2  I love Amazon. They provide excellent customer...      4\n",
       "3  Would really like there to be a receipt for or...      4\n",
       "4  Amazon is my best friend! I rarely have to go ...      5"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:35:18.645708Z",
     "iopub.status.busy": "2021-03-08T20:35:18.645018Z",
     "iopub.status.idle": "2021-03-08T20:35:18.652416Z",
     "shell.execute_reply": "2021-03-08T20:35:18.651711Z"
    },
    "papermill": {
     "duration": 0.11729,
     "end_time": "2021-03-08T20:35:18.652566",
     "exception": false,
     "start_time": "2021-03-08T20:35:18.535276",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1    18974\n",
       "5    16163\n",
       "2     6250\n",
       "3     5369\n",
       "4     4105\n",
       "Name: score, dtype: int64"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['score'].value_counts()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.10763,
     "end_time": "2021-03-08T20:35:18.868538",
     "exception": false,
     "start_time": "2021-03-08T20:35:18.760908",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<a id=\"SS\"></a>\n",
    "## 4.3 - Score to Sentiment"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.104448,
     "end_time": "2021-03-08T20:35:19.080907",
     "exception": false,
     "start_time": "2021-03-08T20:35:18.976459",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Now we have the reviews and their respective scores. So now we will change the numbers to sentiment. \n",
    "* 1 and 2 to 'Negative'\n",
    "* 3 for 'Neutral' \n",
    "* 4 and 5 to 'Positive'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:35:19.300299Z",
     "iopub.status.busy": "2021-03-08T20:35:19.299564Z",
     "iopub.status.idle": "2021-03-08T20:35:19.303014Z",
     "shell.execute_reply": "2021-03-08T20:35:19.302462Z"
    },
    "papermill": {
     "duration": 0.116679,
     "end_time": "2021-03-08T20:35:19.303169",
     "exception": false,
     "start_time": "2021-03-08T20:35:19.186490",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def sentiment(df):\n",
    "    df['sentiment']='-'\n",
    "    df.loc[df['score']<=2,'sentiment']='negative'\n",
    "    df.loc[df['score']==3,'sentiment']='neutral'\n",
    "    df.loc[df['score']>=4,'sentiment']='positive'\n",
    "    \n",
    "    df = pd.get_dummies(df,columns=['sentiment']).reset_index(drop=True).drop(columns=['score'])\n",
    "    return df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:35:19.518529Z",
     "iopub.status.busy": "2021-03-08T20:35:19.517880Z",
     "iopub.status.idle": "2021-03-08T20:35:19.566839Z",
     "shell.execute_reply": "2021-03-08T20:35:19.566134Z"
    },
    "papermill": {
     "duration": 0.158975,
     "end_time": "2021-03-08T20:35:19.567004",
     "exception": false,
     "start_time": "2021-03-08T20:35:19.408029",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df = sentiment(df)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.105823,
     "end_time": "2021-03-08T20:35:19.777361",
     "exception": false,
     "start_time": "2021-03-08T20:35:19.671538",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<a id=\"TP\"></a>\n",
    "# 5 - Text Processing Pipeline "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.104711,
     "end_time": "2021-03-08T20:35:19.986883",
     "exception": false,
     "start_time": "2021-03-08T20:35:19.882172",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Text Preprocessing is an important step for natural language processing (NLP). This process will bring our reviews into a form that is predictable and analyzable for our neural network.\n",
    "\n",
    "For a future verification of our model we will build a pipeline that contains all of the steps of our text preprocessing. So here we will build functions to lowercase the text and remove HTML, remove accented characters, extended contractions, remove special characters, lemmatization, removing stop words, checking if is an english word and removing digits and duplicates white spaces.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.104294,
     "end_time": "2021-03-08T20:35:20.196771",
     "exception": false,
     "start_time": "2021-03-08T20:35:20.092477",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<a id=\"RHTML\"></a>\n",
    "## 5.1 - Lowercase and Remove HTML"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.104129,
     "end_time": "2021-03-08T20:35:20.405316",
     "exception": false,
     "start_time": "2021-03-08T20:35:20.301187",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "For lowercase and remove the html as in almost all of the nexts functions we will use the Regular Expressions."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:35:20.619983Z",
     "iopub.status.busy": "2021-03-08T20:35:20.618969Z",
     "iopub.status.idle": "2021-03-08T20:35:20.622079Z",
     "shell.execute_reply": "2021-03-08T20:35:20.621427Z"
    },
    "papermill": {
     "duration": 0.112588,
     "end_time": "2021-03-08T20:35:20.622223",
     "exception": false,
     "start_time": "2021-03-08T20:35:20.509635",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import re"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:35:20.840340Z",
     "iopub.status.busy": "2021-03-08T20:35:20.839639Z",
     "iopub.status.idle": "2021-03-08T20:35:20.842975Z",
     "shell.execute_reply": "2021-03-08T20:35:20.842434Z"
    },
    "papermill": {
     "duration": 0.115017,
     "end_time": "2021-03-08T20:35:20.843119",
     "exception": false,
     "start_time": "2021-03-08T20:35:20.728102",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "TAG_RE = re.compile(r'<[^>]+>')\n",
    "\n",
    "def re_tags(text_list): #define remove tag funtion\n",
    "    return [TAG_RE.sub('', str(word)).lower() for word in text_list]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.105592,
     "end_time": "2021-03-08T20:35:21.056084",
     "exception": false,
     "start_time": "2021-03-08T20:35:20.950492",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<a id=\"RAC\"></a>\n",
    "## 5.2 - Removing Accented Characters"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.104933,
     "end_time": "2021-03-08T20:35:21.267447",
     "exception": false,
     "start_time": "2021-03-08T20:35:21.162514",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "For remove the accented characters we will use the module and unidecode"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:35:21.481441Z",
     "iopub.status.busy": "2021-03-08T20:35:21.480779Z",
     "iopub.status.idle": "2021-03-08T20:35:21.490058Z",
     "shell.execute_reply": "2021-03-08T20:35:21.489323Z"
    },
    "papermill": {
     "duration": 0.117634,
     "end_time": "2021-03-08T20:35:21.490215",
     "exception": false,
     "start_time": "2021-03-08T20:35:21.372581",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import unidecode"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:35:21.706812Z",
     "iopub.status.busy": "2021-03-08T20:35:21.705836Z",
     "iopub.status.idle": "2021-03-08T20:35:21.709152Z",
     "shell.execute_reply": "2021-03-08T20:35:21.708613Z"
    },
    "papermill": {
     "duration": 0.113227,
     "end_time": "2021-03-08T20:35:21.709287",
     "exception": false,
     "start_time": "2021-03-08T20:35:21.596060",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def re_accented_char(text_list):\n",
    "   \n",
    "    return [unidecode.unidecode(word.encode().decode('utf-8')) for word in text_list]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.11762,
     "end_time": "2021-03-08T20:35:21.934042",
     "exception": false,
     "start_time": "2021-03-08T20:35:21.816422",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<a id=\"EC\"></a>\n",
    "## 5.3 - Extended Contractions "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.106565,
     "end_time": "2021-03-08T20:35:22.164813",
     "exception": false,
     "start_time": "2021-03-08T20:35:22.058248",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "To extend the contractions. First we will replace possible mistakes to the right contraction, then we will use  the re.sub functions to extend then."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:35:22.381546Z",
     "iopub.status.busy": "2021-03-08T20:35:22.380741Z",
     "iopub.status.idle": "2021-03-08T20:35:22.391798Z",
     "shell.execute_reply": "2021-03-08T20:35:22.392329Z"
    },
    "papermill": {
     "duration": 0.122017,
     "end_time": "2021-03-08T20:35:22.392523",
     "exception": false,
     "start_time": "2021-03-08T20:35:22.270506",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def ex_contractions(text_list):\n",
    "    result=[]\n",
    "    for word in text_list:\n",
    "        # replace contracting withoutsignal\n",
    "        word = word.replace(\"wont\",\"won't\")\n",
    "        word = word.replace(\"cant\",\"can't\")\n",
    "        word = word.replace(\"its\",\"it's\")\n",
    "        word = word.replace(\"youre\",\"you're\")\n",
    "        word = word.replace(\"hes\",\"he's\")\n",
    "        word = word.replace(\"shes\",\"she's\")\n",
    "        word = word.replace(\"its\",\"it's\")\n",
    "        word = word.replace(\"weare\",\"we're\")\n",
    "        word = word.replace(\"theyre\",\"they're\")\n",
    "\n",
    "        # specific\n",
    "        word = re.sub(r\"won\\'t\", \"will not\", str(word))\n",
    "        word = re.sub(r\"can\\'t\", \"can not\", str(word))\n",
    "\n",
    "        # general\n",
    "        word = re.sub(r\"n\\'t\", \" not\", str(word))\n",
    "        word = re.sub(r\"\\'re\", \" are\", str(word))\n",
    "        word = re.sub(r\"\\'s\", \" is\", str(word))\n",
    "        word = re.sub(r\"\\'d\", \" would\", str(word))\n",
    "        word = re.sub(r\"\\'ll\", \" will\", str(word))\n",
    "        word = re.sub(r\"\\'t\", \" not\", str(word))\n",
    "        word = re.sub(r\"\\'ve\", \" have\", str(word))\n",
    "        word = re.sub(r\"\\'m\", \" am\", str(word))\n",
    "        result.append(word)\n",
    "    return result"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.105902,
     "end_time": "2021-03-08T20:35:22.604225",
     "exception": false,
     "start_time": "2021-03-08T20:35:22.498323",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<a id=\"RSC\"></a>\n",
    "## 5.4 - Removing Special Characters"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.107937,
     "end_time": "2021-03-08T20:35:22.817719",
     "exception": false,
     "start_time": "2021-03-08T20:35:22.709782",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "To remove the special characters we will use the re.sub functions again."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:35:23.032759Z",
     "iopub.status.busy": "2021-03-08T20:35:23.032069Z",
     "iopub.status.idle": "2021-03-08T20:35:23.035989Z",
     "shell.execute_reply": "2021-03-08T20:35:23.036497Z"
    },
    "papermill": {
     "duration": 0.113931,
     "end_time": "2021-03-08T20:35:23.036681",
     "exception": false,
     "start_time": "2021-03-08T20:35:22.922750",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def re_special_chars(text_list):\n",
    "    return [re.sub(\"[^a-zA-Z0-9]\",\" \",word) for word in text_list]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.105177,
     "end_time": "2021-03-08T20:35:23.249071",
     "exception": false,
     "start_time": "2021-03-08T20:35:23.143894",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<a id=\"L\"></a>\n",
    "## 5.5 - Lemmatization"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.104627,
     "end_time": "2021-03-08T20:35:23.458587",
     "exception": false,
     "start_time": "2021-03-08T20:35:23.353960",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Lemmatization is the process of converting a word to its base form. \n",
    "\n",
    ">\"The difference between stemming and lemmatization is, lemmatization considers the context and converts the word to its meaningful base form, whereas stemming just removes the last few characters, often leading to incorrect meanings and spelling errors.\"The difference between stemming and lemmatization is, lemmatization considers the context and converts the word to its meaningful base form, whereas stemming just removes the last few characters, often leading to incorrect meanings and spelling errors.'\n",
    ">\n",
    ">Jasmin Schreiber. [See more at machinelearningplus](https://www.machinelearningplus.com/nlp/lemmatization-examples-python/)\n",
    "\n",
    "To do the Lemmatization we will use the NLTK libraries. In order to lemmatize we will create an instance of the WordNetLemmatizer() and call the lemmatize() function on each word."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:35:23.671433Z",
     "iopub.status.busy": "2021-03-08T20:35:23.670752Z",
     "iopub.status.idle": "2021-03-08T20:35:25.528633Z",
     "shell.execute_reply": "2021-03-08T20:35:25.527474Z"
    },
    "papermill": {
     "duration": 1.965147,
     "end_time": "2021-03-08T20:35:25.528800",
     "exception": false,
     "start_time": "2021-03-08T20:35:23.563653",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from nltk.stem import WordNetLemmatizer "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:35:25.751361Z",
     "iopub.status.busy": "2021-03-08T20:35:25.750616Z",
     "iopub.status.idle": "2021-03-08T20:35:25.753769Z",
     "shell.execute_reply": "2021-03-08T20:35:25.753130Z"
    },
    "papermill": {
     "duration": 0.120268,
     "end_time": "2021-03-08T20:35:25.753927",
     "exception": false,
     "start_time": "2021-03-08T20:35:25.633659",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def lemmatize_text(text_list):\n",
    "    wnl = WordNetLemmatizer()\n",
    "    lemmatizer_sentence = []  \n",
    "    tokenizer=nltk.tokenize.WhitespaceTokenizer()\n",
    "    for word in tokenizer.tokenize(text_list):\n",
    "        lemmatizer_sentence.append(wnl.lemmatize(word,'v'))\n",
    "        lemmatizer_sentence.append(\" \")\n",
    "    \n",
    "    return(\"\".join(lemmatizer_sentence))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.104562,
     "end_time": "2021-03-08T20:35:25.964850",
     "exception": false,
     "start_time": "2021-03-08T20:35:25.860288",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<a id=\"RSW\"></a>\n",
    "## 5.6 - Removing Stop Words"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.1048,
     "end_time": "2021-03-08T20:35:26.174205",
     "exception": false,
     "start_time": "2021-03-08T20:35:26.069405",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "To remove stop words from the reviews, we will tokenize the sentence and then remove the word if it exists in the list of stop words provided by NLTK."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:35:26.387367Z",
     "iopub.status.busy": "2021-03-08T20:35:26.386665Z",
     "iopub.status.idle": "2021-03-08T20:35:26.389544Z",
     "shell.execute_reply": "2021-03-08T20:35:26.390044Z"
    },
    "papermill": {
     "duration": 0.111652,
     "end_time": "2021-03-08T20:35:26.390227",
     "exception": false,
     "start_time": "2021-03-08T20:35:26.278575",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import nltk"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:35:26.603960Z",
     "iopub.status.busy": "2021-03-08T20:35:26.603255Z",
     "iopub.status.idle": "2021-03-08T20:35:26.606481Z",
     "shell.execute_reply": "2021-03-08T20:35:26.605908Z"
    },
    "papermill": {
     "duration": 0.112085,
     "end_time": "2021-03-08T20:35:26.606633",
     "exception": false,
     "start_time": "2021-03-08T20:35:26.494548",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from nltk.corpus import stopwords"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:35:26.823839Z",
     "iopub.status.busy": "2021-03-08T20:35:26.823166Z",
     "iopub.status.idle": "2021-03-08T20:35:26.826428Z",
     "shell.execute_reply": "2021-03-08T20:35:26.825736Z"
    },
    "papermill": {
     "duration": 0.115098,
     "end_time": "2021-03-08T20:35:26.826573",
     "exception": false,
     "start_time": "2021-03-08T20:35:26.711475",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def stopwords_text(text_list):\n",
    "    stop = stopwords.words('english')\n",
    "    sentence_without = []\n",
    "    tokenizer=nltk.tokenize.WhitespaceTokenizer()\n",
    "    for word in tokenizer.tokenize(text_list):\n",
    "        if word not in stop:\n",
    "            sentence_without.append(word)\n",
    "            sentence_without.append(\" \")\n",
    "            \n",
    "    return(\"\".join(sentence_without))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.103854,
     "end_time": "2021-03-08T20:35:27.035804",
     "exception": false,
     "start_time": "2021-03-08T20:35:26.931950",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<a id=\"CEW\"></a>\n",
    "## 5.7 - Checking If Is An English Word"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.104055,
     "end_time": "2021-03-08T20:35:27.246188",
     "exception": false,
     "start_time": "2021-03-08T20:35:27.142133",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "To check if the words are in the English dictionary we will use NLTK words corpus."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:35:27.461297Z",
     "iopub.status.busy": "2021-03-08T20:35:27.460582Z",
     "iopub.status.idle": "2021-03-08T20:35:27.609826Z",
     "shell.execute_reply": "2021-03-08T20:35:27.609221Z"
    },
    "papermill": {
     "duration": 0.259339,
     "end_time": "2021-03-08T20:35:27.609990",
     "exception": false,
     "start_time": "2021-03-08T20:35:27.350651",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "words=set(nltk.corpus.words.words())\n",
    "\n",
    "def word_check(text_list):\n",
    "    result=[]\n",
    "    for word in text_list:\n",
    "        if word.lower() in words:\n",
    "            result.append(word)\n",
    "    return result"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.126489,
     "end_time": "2021-03-08T20:35:27.841555",
     "exception": false,
     "start_time": "2021-03-08T20:35:27.715066",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<a id=\"RDDWS\"></a>\n",
    "## 5.8 -  Removing Digits And Duplicates White Spaces"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.129543,
     "end_time": "2021-03-08T20:35:28.084109",
     "exception": false,
     "start_time": "2021-03-08T20:35:27.954566",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Last but not least we will use the re.sub again to remove the duplicates white spaces and the digits."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:35:28.313752Z",
     "iopub.status.busy": "2021-03-08T20:35:28.313035Z",
     "iopub.status.idle": "2021-03-08T20:35:28.315701Z",
     "shell.execute_reply": "2021-03-08T20:35:28.316330Z"
    },
    "papermill": {
     "duration": 0.120063,
     "end_time": "2021-03-08T20:35:28.316502",
     "exception": false,
     "start_time": "2021-03-08T20:35:28.196439",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def re_whitespaces(text_list): \n",
    "    result=[]\n",
    "    for word in text_list:\n",
    "        word=(re.sub(r'\\d','dig',str(word))) #remove numbers \n",
    "        word = (re.sub(r'\\s+',' ', str(word))) #remove duplicates white spacces\n",
    "        result.append(word)\n",
    "    return result"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:35:28.553751Z",
     "iopub.status.busy": "2021-03-08T20:35:28.552990Z",
     "iopub.status.idle": "2021-03-08T20:35:28.560501Z",
     "shell.execute_reply": "2021-03-08T20:35:28.561032Z"
    },
    "papermill": {
     "duration": 0.13618,
     "end_time": "2021-03-08T20:35:28.561219",
     "exception": false,
     "start_time": "2021-03-08T20:35:28.425039",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Removing blank comments\n",
    "df = df[df['reviews']!='']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.107338,
     "end_time": "2021-03-08T20:35:28.777084",
     "exception": false,
     "start_time": "2021-03-08T20:35:28.669746",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<a id=\"Pipeline\"></a>\n",
    "## 5.9 - Pipeline"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.105848,
     "end_time": "2021-03-08T20:35:28.993081",
     "exception": false,
     "start_time": "2021-03-08T20:35:28.887233",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "For the pipeline we are going to define 3 classes to apply all the text preprocessing  previous functions on the reviews.\n",
    " The first Class will apply all the functions created to prepare the text into a regular expression. The second Class will remove all the the stop words and the last Class will lemmatizer the remnants words  of the previous\n",
    "processes\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:35:29.208249Z",
     "iopub.status.busy": "2021-03-08T20:35:29.207513Z",
     "iopub.status.idle": "2021-03-08T20:35:29.213463Z",
     "shell.execute_reply": "2021-03-08T20:35:29.214012Z"
    },
    "papermill": {
     "duration": 0.114872,
     "end_time": "2021-03-08T20:35:29.214224",
     "exception": false,
     "start_time": "2021-03-08T20:35:29.099352",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.pipeline import Pipeline\n",
    "from sklearn.base import BaseEstimator, TransformerMixin"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:35:29.427627Z",
     "iopub.status.busy": "2021-03-08T20:35:29.426970Z",
     "iopub.status.idle": "2021-03-08T20:35:29.432691Z",
     "shell.execute_reply": "2021-03-08T20:35:29.433286Z"
    },
    "papermill": {
     "duration": 0.113851,
     "end_time": "2021-03-08T20:35:29.433462",
     "exception": false,
     "start_time": "2021-03-08T20:35:29.319611",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Class for regular expressions application\n",
    "class ApplyRegex(BaseEstimator, TransformerMixin):\n",
    "    \n",
    "    def __init__(self, regex_transformers):\n",
    "        self.regex_transformers = regex_transformers\n",
    "        \n",
    "    def fit(self, X, y=None):\n",
    "        return self\n",
    "    \n",
    "    def transform(self, X, y=None):\n",
    "        # Applying all regex functions in the regex_transformers dictionary\n",
    "        for regex_name, regex_function in self.regex_transformers.items():\n",
    "            X = regex_function(X)\n",
    "            \n",
    "        return X"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:35:29.649784Z",
     "iopub.status.busy": "2021-03-08T20:35:29.649011Z",
     "iopub.status.idle": "2021-03-08T20:35:29.670623Z",
     "shell.execute_reply": "2021-03-08T20:35:29.671206Z"
    },
    "papermill": {
     "duration": 0.132184,
     "end_time": "2021-03-08T20:35:29.671386",
     "exception": false,
     "start_time": "2021-03-08T20:35:29.539202",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "class StopWordsRemoval(BaseEstimator, TransformerMixin):\n",
    "    \n",
    "    def __init__(self, text_stopwords):\n",
    "        self.text_stopwords = text_stopwords\n",
    "    def fit(self, X, y=None):\n",
    "        return self\n",
    "    def transform(self, X, y=None):\n",
    "        return [self.text_stopwords(comment) for comment in X]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:35:29.891701Z",
     "iopub.status.busy": "2021-03-08T20:35:29.890944Z",
     "iopub.status.idle": "2021-03-08T20:35:29.897592Z",
     "shell.execute_reply": "2021-03-08T20:35:29.896912Z"
    },
    "papermill": {
     "duration": 0.118416,
     "end_time": "2021-03-08T20:35:29.897770",
     "exception": false,
     "start_time": "2021-03-08T20:35:29.779354",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "class LemmatizeProcess(BaseEstimator, TransformerMixin):\n",
    "    \n",
    "    def __init__(self, Lemmatize):\n",
    "        self.Lemmatizer = Lemmatize\n",
    "    \n",
    "    def fit(self, X, y=None):\n",
    "        return self\n",
    "    \n",
    "    def transform(self, X, y=None):\n",
    "        return [self.Lemmatizer(comment) for comment in X]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.10816,
     "end_time": "2021-03-08T20:35:30.115892",
     "exception": false,
     "start_time": "2021-03-08T20:35:30.007732",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Now we are going to define a dictionary for all the regular expressions functions and then define the text preprocessing pipeline with the classes above the defined."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:35:30.333275Z",
     "iopub.status.busy": "2021-03-08T20:35:30.332589Z",
     "iopub.status.idle": "2021-03-08T20:35:30.337311Z",
     "shell.execute_reply": "2021-03-08T20:35:30.337930Z"
    },
    "papermill": {
     "duration": 0.117277,
     "end_time": "2021-03-08T20:35:30.338113",
     "exception": false,
     "start_time": "2021-03-08T20:35:30.220836",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Defining regex transformers to be applied\n",
    "regex_transformers = {\n",
    "    'remove_tags': re_tags,\n",
    "    'remove_accents': re_accented_char,\n",
    "    'decontracted': ex_contractions,\n",
    "    're_sc': re_special_chars,\n",
    "    'whitespaces': re_whitespaces\n",
    "}\n",
    "\n",
    "# Building a text prep pipeline\n",
    "text_prep_pipeline = Pipeline([\n",
    "    ('regex', ApplyRegex(regex_transformers)),\n",
    "    ('stopwords', StopWordsRemoval(stopwords_text)),\n",
    "    ('lemmatize', LemmatizeProcess(lemmatize_text)),\n",
    "])\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.155841,
     "end_time": "2021-03-08T20:35:30.604341",
     "exception": false,
     "start_time": "2021-03-08T20:35:30.448500",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Now we can apply the pipeline into the reviews column."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:35:30.826530Z",
     "iopub.status.busy": "2021-03-08T20:35:30.825832Z",
     "iopub.status.idle": "2021-03-08T20:35:54.105778Z",
     "shell.execute_reply": "2021-03-08T20:35:54.105201Z"
    },
    "papermill": {
     "duration": 23.39236,
     "end_time": "2021-03-08T20:35:54.105963",
     "exception": false,
     "start_time": "2021-03-08T20:35:30.713603",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df['reviews'] = text_prep_pipeline.fit_transform(df[df.columns[:1]].values)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.10487,
     "end_time": "2021-03-08T20:35:54.316430",
     "exception": false,
     "start_time": "2021-03-08T20:35:54.211560",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<a id=\"Plot\"></a>\n",
    "# 6 - Plot"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.104188,
     "end_time": "2021-03-08T20:35:54.525085",
     "exception": false,
     "start_time": "2021-03-08T20:35:54.420897",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "For a good understanding of the Amazon reviews we are going to plot the text in three different ways.\n",
    " \n",
    "   * First we will plot the distribution of the sentiments using pie graph express plot from plotly.  \n",
    "   * The second plot is the famous Word Cloud graph from the wordcloud library.\n",
    "   * The last plot  is a bar plot for the n-gram, which is a sequence of n words most common shown together. We will plot the 1 grams, 2 grams, 3 grams and 4 grams for each sentiment."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.103894,
     "end_time": "2021-03-08T20:35:54.733457",
     "exception": false,
     "start_time": "2021-03-08T20:35:54.629563",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<a id=\"SD\"></a>\n",
    "## 6. 1 - Sentiment Distribution"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.131716,
     "end_time": "2021-03-08T20:35:54.970561",
     "exception": false,
     "start_time": "2021-03-08T20:35:54.838845",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "To plot the distribution of the sentiments in our df we will use the main df to plot the total of each sentiment in a pie graph using the library plotly.express. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:35:55.202535Z",
     "iopub.status.busy": "2021-03-08T20:35:55.201819Z",
     "iopub.status.idle": "2021-03-08T20:35:56.155175Z",
     "shell.execute_reply": "2021-03-08T20:35:56.154499Z"
    },
    "papermill": {
     "duration": 1.062511,
     "end_time": "2021-03-08T20:35:56.155333",
     "exception": false,
     "start_time": "2021-03-08T20:35:55.092822",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "import plotly.express as px"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:35:56.373515Z",
     "iopub.status.busy": "2021-03-08T20:35:56.372830Z",
     "iopub.status.idle": "2021-03-08T20:35:56.378918Z",
     "shell.execute_reply": "2021-03-08T20:35:56.379391Z"
    },
    "papermill": {
     "duration": 0.118503,
     "end_time": "2021-03-08T20:35:56.379569",
     "exception": false,
     "start_time": "2021-03-08T20:35:56.261066",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "total = pd.DataFrame(df[df.columns[1:]].sum()).rename(columns={0:'Total'})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:35:56.591814Z",
     "iopub.status.busy": "2021-03-08T20:35:56.591160Z",
     "iopub.status.idle": "2021-03-08T20:35:57.936260Z",
     "shell.execute_reply": "2021-03-08T20:35:57.935729Z"
    },
    "papermill": {
     "duration": 1.452474,
     "end_time": "2021-03-08T20:35:57.936408",
     "exception": false,
     "start_time": "2021-03-08T20:35:56.483934",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "        <script type=\"text/javascript\">\n",
       "        window.PlotlyConfig = {MathJaxConfig: 'local'};\n",
       "        if (window.MathJax) {MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}\n",
       "        if (typeof require !== 'undefined') {\n",
       "        require.undef(\"plotly\");\n",
       "        requirejs.config({\n",
       "            paths: {\n",
       "                'plotly': ['https://cdn.plot.ly/plotly-latest.min']\n",
       "            }\n",
       "        });\n",
       "        require(['plotly'], function(Plotly) {\n",
       "            window._Plotly = Plotly;\n",
       "        });\n",
       "        }\n",
       "        </script>\n",
       "        "
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>                            <div id=\"dca8f0c0-53df-49e4-b727-3a576bbbf69f\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"dca8f0c0-53df-49e4-b727-3a576bbbf69f\")) {                    Plotly.newPlot(                        \"dca8f0c0-53df-49e4-b727-3a576bbbf69f\",                        [{\"domain\": {\"x\": [0.0, 1.0], \"y\": [0.0, 1.0]}, \"hovertemplate\": \"index=%{label}<br>Total=%{value}<extra></extra>\", \"labels\": [\"sentiment_negative\", \"sentiment_neutral\", \"sentiment_positive\"], \"legendgroup\": \"\", \"name\": \"\", \"showlegend\": true, \"type\": \"pie\", \"values\": [25224, 5369, 20268]}],                        {\"legend\": {\"tracegroupgap\": 0}, \"margin\": {\"t\": 60}, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"autotypenumbers\": \"strict\", \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}},                        {\"responsive\": true}                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('dca8f0c0-53df-49e4-b727-3a576bbbf69f');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })                };                });            </script>        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig = px.pie(total,values='Total',names=total.index)\n",
    "fig.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.106982,
     "end_time": "2021-03-08T20:35:58.150497",
     "exception": false,
     "start_time": "2021-03-08T20:35:58.043515",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "As expected is a very unbalanced data frame, since we define 2 scores (1 and 2) for negative and 2 scores for positive (4 and 5) and just one score ( 3 ) for neutral sentiments. Knowing that, we are going to balance the df in later actions before applying the neural networking.\n",
    " \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.105486,
     "end_time": "2021-03-08T20:35:58.361859",
     "exception": false,
     "start_time": "2021-03-08T20:35:58.256373",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<a id=\"WC\"></a>\n",
    "## 6.2 - Words Cloud"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.105763,
     "end_time": "2021-03-08T20:35:58.574449",
     "exception": false,
     "start_time": "2021-03-08T20:35:58.468686",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Now we are going to do the famous Word Cloud graph, an image composed of words used in the Amazon reviews, in which the size of each word indicates its frequency. \n",
    "\n",
    "To do that we are going to create 3 df. Positive, Neutral and Negative with the words that compose the reviews of each sentiment and we are going to count how many times it repeat using values_count()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:35:58.792624Z",
     "iopub.status.busy": "2021-03-08T20:35:58.791903Z",
     "iopub.status.idle": "2021-03-08T20:35:58.831780Z",
     "shell.execute_reply": "2021-03-08T20:35:58.830627Z"
    },
    "papermill": {
     "duration": 0.150382,
     "end_time": "2021-03-08T20:35:58.832023",
     "exception": false,
     "start_time": "2021-03-08T20:35:58.681641",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from wordcloud import WordCloud \n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:35:59.058783Z",
     "iopub.status.busy": "2021-03-08T20:35:59.058061Z",
     "iopub.status.idle": "2021-03-08T20:35:59.518793Z",
     "shell.execute_reply": "2021-03-08T20:35:59.518220Z"
    },
    "papermill": {
     "duration": 0.576129,
     "end_time": "2021-03-08T20:35:59.518970",
     "exception": false,
     "start_time": "2021-03-08T20:35:58.942841",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "pos_comments = list(df[df['sentiment_positive']==1]['reviews'].values)\n",
    "positive_words = ' '.join(pos_comments).split(' ')\n",
    "positive_words = pd.DataFrame(positive_words,columns=['words'])['words'].value_counts()[1:]\n",
    "\n",
    "neu_comments = list(df[df['sentiment_neutral']==1]['reviews'].values)\n",
    "neutral_words = ' '.join(neu_comments).split(' ')\n",
    "neutral_words = pd.DataFrame(neutral_words,columns=['words'])['words'].value_counts()[1:]\n",
    "\n",
    "neg_comments = list(df[df['sentiment_negative']==1]['reviews'].values)\n",
    "negative_words = ' '.join(neg_comments).split(' ')\n",
    "negative_words = pd.DataFrame(negative_words,columns=['words'])['words'].value_counts()[1:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:35:59.743489Z",
     "iopub.status.busy": "2021-03-08T20:35:59.742534Z",
     "iopub.status.idle": "2021-03-08T20:36:01.777958Z",
     "shell.execute_reply": "2021-03-08T20:36:01.776434Z"
    },
    "papermill": {
     "duration": 2.145924,
     "end_time": "2021-03-08T20:36:01.778132",
     "exception": false,
     "start_time": "2021-03-08T20:35:59.632208",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "positive_wc = WordCloud(width=1280, height=720, collocations=False, random_state=42,\n",
    "                      colormap='Blues', background_color='white', max_words=50)\n",
    "positive_wc = positive_wc.generate_from_frequencies(positive_words)\n",
    "\n",
    "\n",
    "neutral_wc = WordCloud(width=1280, height=720, collocations=False, random_state=42,\n",
    "                          colormap='Greys', background_color='white', max_words=50)\n",
    "neutral_wc = neutral_wc.generate_from_frequencies(neutral_words)\n",
    "\n",
    "\n",
    "negative_wc = WordCloud(width=1280, height=720, collocations=False, random_state=42,\n",
    "                          colormap='Reds_r', background_color='white', max_words=50)\n",
    "negative_wc = negative_wc.generate_from_frequencies(negative_words)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:36:02.015401Z",
     "iopub.status.busy": "2021-03-08T20:36:02.014353Z",
     "iopub.status.idle": "2021-03-08T20:36:03.387449Z",
     "shell.execute_reply": "2021-03-08T20:36:03.387994Z"
    },
    "papermill": {
     "duration": 1.50263,
     "end_time": "2021-03-08T20:36:03.388176",
     "exception": false,
     "start_time": "2021-03-08T20:36:01.885546",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 2160x2160 with 3 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, axs = plt.subplots(1, 3, figsize=(30, 30))\n",
    "\n",
    "axs[0].set_title('WordCloud for Positive', size=25, pad=20)\n",
    "axs[0].imshow(positive_wc)\n",
    "axs[0].axis('off')\n",
    "\n",
    "axs[1].set_title('WordCloud for Neutral', size=25, pad=20)\n",
    "axs[1].imshow(neutral_wc)\n",
    "axs[1].axis('off')\n",
    "\n",
    "axs[2].set_title('WordCloud for Negative', size=25, pad=20)\n",
    "axs[2].imshow(negative_wc)\n",
    "axs[2].axis('off');\n",
    "\n",
    "fig.subplots_adjust(hspace=1,wspace=0.0)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.118214,
     "end_time": "2021-03-08T20:36:03.624013",
     "exception": false,
     "start_time": "2021-03-08T20:36:03.505799",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "We can see the words like Easy, Love, Good in Positive Words Cloud. Order, Go, Get in Neutral and Update, Try and Search in the Negative Word Clouds. However words alone can have a lot of different meanings. To get more context we will use the N_grams to identify what kind of thing they are talking about in each sentiment."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.118417,
     "end_time": "2021-03-08T20:36:03.859892",
     "exception": false,
     "start_time": "2021-03-08T20:36:03.741475",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<a id=\"NGP\"></a>\n",
    "## 6.3 - N_Gram Plot"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.118,
     "end_time": "2021-03-08T20:36:04.096502",
     "exception": false,
     "start_time": "2021-03-08T20:36:03.978502",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    " \n",
    " That is a very nice way to understand the most comuns topics per sentiment. To do that we will use the module CountVectorizer from sklearn feature_extraction text library. \n",
    " It might seem a little bit of a mess at first look but it's not.\n",
    "     We builded a function that counted the 1,2,3 and 4 grams per sentiment and another function to define the dfs per sentiment calling the first function.\n",
    "\n",
    " Then we will end up with amazon_results df that contain a list of 12 dfs. \n",
    "    \n",
    "   * Mono-gram - positive neutral and negative.\n",
    "   * Bi-gram - for positive neutral and negative.\n",
    "   * Tri-gram - for positive neutral and negative.\n",
    "   * Tetra-gram - for positive neutral and negative.\n",
    "\n",
    "Then we will use subplot to plot the top 5 most comuns n-grams for each sentiment.\n",
    "\n",
    "     "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:36:04.334659Z",
     "iopub.status.busy": "2021-03-08T20:36:04.333980Z",
     "iopub.status.idle": "2021-03-08T20:36:04.339388Z",
     "shell.execute_reply": "2021-03-08T20:36:04.338706Z"
    },
    "papermill": {
     "duration": 0.126005,
     "end_time": "2021-03-08T20:36:04.339537",
     "exception": false,
     "start_time": "2021-03-08T20:36:04.213532",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.feature_extraction.text import CountVectorizer\n",
    "from plotly.subplots import make_subplots\n",
    "import plotly.graph_objects as go"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:36:04.595296Z",
     "iopub.status.busy": "2021-03-08T20:36:04.590128Z",
     "iopub.status.idle": "2021-03-08T20:36:04.607769Z",
     "shell.execute_reply": "2021-03-08T20:36:04.607085Z"
    },
    "papermill": {
     "duration": 0.149895,
     "end_time": "2021-03-08T20:36:04.607935",
     "exception": false,
     "start_time": "2021-03-08T20:36:04.458040",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def ngram_results(df):\n",
    "    \n",
    "    df_1=df[df['sentiment_positive']==1]\n",
    "    df_2=df[df['sentiment_neutral']==1]\n",
    "    df_3=df[df['sentiment_negative']==1]\n",
    "    \n",
    "    \n",
    "    def uni_bi_tri(df_pos,df_neu,df_neg):\n",
    "        \n",
    "        #pos\n",
    "        word_vectorizer = CountVectorizer(ngram_range=(1,1), analyzer='word')\n",
    "        sparse_matrix = word_vectorizer.fit_transform(df_pos['reviews'][:10000])\n",
    "        frequencies = sum(sparse_matrix).toarray()[0]\n",
    "        result_mono_pos=pd.DataFrame(frequencies, index=word_vectorizer.get_feature_names(), columns=['frequency']).sort_values(by=['frequency'],ascending=False)\n",
    "\n",
    "        word_vectorizer = CountVectorizer(ngram_range=(2,2), analyzer='word')\n",
    "        sparse_matrix = word_vectorizer.fit_transform(df_pos['reviews'][:10000])\n",
    "        frequencies = sum(sparse_matrix).toarray()[0]\n",
    "        result_bi_pos=pd.DataFrame(frequencies, index=word_vectorizer.get_feature_names(), columns=['frequency']).sort_values(by=['frequency'],ascending=False)\n",
    "\n",
    "        word_vectorizer = CountVectorizer(ngram_range=(3,3), analyzer='word')\n",
    "        sparse_matrix = word_vectorizer.fit_transform(df_pos['reviews'][:10000])\n",
    "        frequencies = sum(sparse_matrix).toarray()[0]\n",
    "        result_tri_pos=pd.DataFrame(frequencies, index=word_vectorizer.get_feature_names(), columns=['frequency']).sort_values(by=['frequency'],ascending=False)\n",
    "        \n",
    "        word_vectorizer = CountVectorizer(ngram_range=(4,4), analyzer='word')\n",
    "        sparse_matrix = word_vectorizer.fit_transform(df_pos['reviews'][:10000])\n",
    "        frequencies = sum(sparse_matrix).toarray()[0]\n",
    "        result_tetra_pos=pd.DataFrame(frequencies, index=word_vectorizer.get_feature_names(), columns=['frequency']).sort_values(by=['frequency'],ascending=False)\n",
    "       \n",
    "        #neu\n",
    "        word_vectorizer = CountVectorizer(ngram_range=(1,1), analyzer='word')\n",
    "        sparse_matrix = word_vectorizer.fit_transform(df_neu['reviews'][:10000])\n",
    "        frequencies = sum(sparse_matrix).toarray()[0]\n",
    "        result_mono_neu=pd.DataFrame(frequencies, index=word_vectorizer.get_feature_names(), columns=['frequency']).sort_values(by=['frequency'],ascending=False)\n",
    "\n",
    "        word_vectorizer = CountVectorizer(ngram_range=(2,2), analyzer='word')\n",
    "        sparse_matrix = word_vectorizer.fit_transform(df_neu['reviews'][:10000])\n",
    "        frequencies = sum(sparse_matrix).toarray()[0]\n",
    "        result_bi_neu=pd.DataFrame(frequencies, index=word_vectorizer.get_feature_names(), columns=['frequency']).sort_values(by=['frequency'],ascending=False)\n",
    "\n",
    "        word_vectorizer = CountVectorizer(ngram_range=(3,3), analyzer='word')\n",
    "        sparse_matrix = word_vectorizer.fit_transform(df_neu['reviews'][:10000])\n",
    "        frequencies = sum(sparse_matrix).toarray()[0]\n",
    "        result_tri_neu=pd.DataFrame(frequencies, index=word_vectorizer.get_feature_names(), columns=['frequency']).sort_values(by=['frequency'],ascending=False)\n",
    "        \n",
    "        word_vectorizer = CountVectorizer(ngram_range=(4,4), analyzer='word')\n",
    "        sparse_matrix = word_vectorizer.fit_transform(df_neu['reviews'][:10000])\n",
    "        frequencies = sum(sparse_matrix).toarray()[0]\n",
    "        result_tetra_neu=pd.DataFrame(frequencies, index=word_vectorizer.get_feature_names(), columns=['frequency']).sort_values(by=['frequency'],ascending=False)\n",
    "        \n",
    "        #neg\n",
    "        word_vectorizer = CountVectorizer(ngram_range=(1,1), analyzer='word')\n",
    "        sparse_matrix = word_vectorizer.fit_transform(df_neg['reviews'][:10000])\n",
    "        frequencies = sum(sparse_matrix).toarray()[0]\n",
    "        result_mono_neg=pd.DataFrame(frequencies, index=word_vectorizer.get_feature_names(), columns=['frequency']).sort_values(by=['frequency'],ascending=False)\n",
    "\n",
    "        word_vectorizer = CountVectorizer(ngram_range=(2,2), analyzer='word')\n",
    "        sparse_matrix = word_vectorizer.fit_transform(df_neg['reviews'][:10000])\n",
    "        frequencies = sum(sparse_matrix).toarray()[0]\n",
    "        result_bi_neg=pd.DataFrame(frequencies, index=word_vectorizer.get_feature_names(), columns=['frequency']).sort_values(by=['frequency'],ascending=False)\n",
    "\n",
    "        word_vectorizer = CountVectorizer(ngram_range=(3,3), analyzer='word')\n",
    "        sparse_matrix = word_vectorizer.fit_transform(df_neg['reviews'][:10000])\n",
    "        frequencies = sum(sparse_matrix).toarray()[0]\n",
    "        result_tri_neg=pd.DataFrame(frequencies, index=word_vectorizer.get_feature_names(), columns=['frequency']).sort_values(by=['frequency'],ascending=False)\n",
    "        \n",
    "        word_vectorizer = CountVectorizer(ngram_range=(4,4), analyzer='word')\n",
    "        sparse_matrix = word_vectorizer.fit_transform(df_neg['reviews'][:10000])\n",
    "        frequencies = sum(sparse_matrix).toarray()[0]\n",
    "        result_tetra_neg=pd.DataFrame(frequencies, index=word_vectorizer.get_feature_names(), columns=['frequency']).sort_values(by=['frequency'],ascending=False)\n",
    "        \n",
    "        results=[result_mono_pos,result_bi_pos,result_tri_pos,result_tetra_pos,\n",
    "                 result_mono_neu,result_bi_neu,result_tri_neu,result_tetra_neu,\n",
    "                 result_mono_neg,result_bi_neg,result_tri_neg,result_tetra_neg]\n",
    "        \n",
    "        return results\n",
    "    \n",
    "\n",
    "    \n",
    "    return uni_bi_tri(df_1,df_2,df_3)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:36:04.849680Z",
     "iopub.status.busy": "2021-03-08T20:36:04.849009Z",
     "iopub.status.idle": "2021-03-08T20:38:30.103974Z",
     "shell.execute_reply": "2021-03-08T20:38:30.103218Z"
    },
    "papermill": {
     "duration": 145.37783,
     "end_time": "2021-03-08T20:38:30.104157",
     "exception": false,
     "start_time": "2021-03-08T20:36:04.726327",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "amazon_results = ngram_results(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:38:30.353579Z",
     "iopub.status.busy": "2021-03-08T20:38:30.352853Z",
     "iopub.status.idle": "2021-03-08T20:38:30.355754Z",
     "shell.execute_reply": "2021-03-08T20:38:30.355120Z"
    },
    "papermill": {
     "duration": 0.132687,
     "end_time": "2021-03-08T20:38:30.355914",
     "exception": false,
     "start_time": "2021-03-08T20:38:30.223227",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def rename_index(dflist):\n",
    "\n",
    "    #pos\n",
    "    df_mono_pos=pd.DataFrame(dflist[0]).reset_index().rename(columns={'index':'Mono_Pos'})\n",
    "    df_bi_pos=pd.DataFrame(dflist[1]).reset_index().rename(columns={'index':'Bi_Pos'})\n",
    "    df_tri_pos=pd.DataFrame(dflist[2]).reset_index().rename(columns={'index':'Tri_Pos'})\n",
    "    df_tetra_pos=pd.DataFrame(dflist[3]).reset_index().rename(columns={'index':'Tetra_Pos'})\n",
    "    #neu\n",
    "    df_mono_neu=pd.DataFrame(dflist[4]).reset_index().rename(columns={'index':'Mono_Neu'})\n",
    "    df_bi_neu=pd.DataFrame(dflist[5]).reset_index().rename(columns={'index':'Bi_Neu'})\n",
    "    df_tri_neu=pd.DataFrame(dflist[6]).reset_index().rename(columns={'index':'Tri_Neu'})\n",
    "    df_tetra_neu=pd.DataFrame(dflist[7]).reset_index().rename(columns={'index':'Tetra_Neu'})\n",
    "    #neg\n",
    "    df_mono_neg=pd.DataFrame(dflist[8]).reset_index().rename(columns={'index':'Mono_Pos'})\n",
    "    df_bi_neg=pd.DataFrame(dflist[9]).reset_index().rename(columns={'index':'Bi_Pos'})\n",
    "    df_tri_neg=pd.DataFrame(dflist[10]).reset_index().rename(columns={'index':'Tri_Pos'})\n",
    "    df_tetra_neg=pd.DataFrame(dflist[11]).reset_index().rename(columns={'index':'Tetra_Neg'})\n",
    "    \n",
    "    result=[df_mono_pos, df_bi_pos, df_tri_pos, df_tetra_pos,\n",
    "            df_mono_neu, df_bi_neu, df_tri_neu, df_tetra_neu,\n",
    "            df_mono_neg, df_bi_neg, df_tri_neg, df_tetra_neg]\n",
    "    \n",
    "    return result"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:38:30.599753Z",
     "iopub.status.busy": "2021-03-08T20:38:30.599057Z",
     "iopub.status.idle": "2021-03-08T20:38:30.688210Z",
     "shell.execute_reply": "2021-03-08T20:38:30.687132Z"
    },
    "papermill": {
     "duration": 0.213881,
     "end_time": "2021-03-08T20:38:30.688379",
     "exception": false,
     "start_time": "2021-03-08T20:38:30.474498",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "amazon_results=rename_index(amazon_results)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:38:30.950965Z",
     "iopub.status.busy": "2021-03-08T20:38:30.950212Z",
     "iopub.status.idle": "2021-03-08T20:38:31.161604Z",
     "shell.execute_reply": "2021-03-08T20:38:31.161058Z"
    },
    "papermill": {
     "duration": 0.354608,
     "end_time": "2021-03-08T20:38:31.161743",
     "exception": false,
     "start_time": "2021-03-08T20:38:30.807135",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>                            <div id=\"3a1c3d63-64b5-4d32-aad7-8fff34ea2f91\" class=\"plotly-graph-div\" style=\"height:900px; width:1000px;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"3a1c3d63-64b5-4d32-aad7-8fff34ea2f91\")) {                    Plotly.newPlot(                        \"3a1c3d63-64b5-4d32-aad7-8fff34ea2f91\",                        [{\"marker\": {\"color\": \"DeepSkyBlue\"}, \"type\": \"bar\", \"x\": [\"app\", \"amazon\", \"love\", \"shop\", \"great\"], \"xaxis\": \"x\", \"y\": [3710, 3605, 2601, 2365, 2034], \"yaxis\": \"y\"}, {\"marker\": {\"color\": \"DeepSkyBlue\"}, \"type\": \"bar\", \"x\": [\"love amazon\", \"easy use\", \"customer service\", \"love app\", \"great app\"], \"xaxis\": \"x2\", \"y\": [752, 593, 411, 384, 347], \"yaxis\": \"y2\"}, {\"marker\": {\"color\": \"DeepSkyBlue\"}, \"type\": \"bar\", \"x\": [\"love shop amazon\", \"app easy use\", \"love amazon shop\", \"great customer service\", \"love amazon prime\"], \"xaxis\": \"x3\", \"y\": [160, 101, 66, 63, 58], \"yaxis\": \"y3\"}, {\"marker\": {\"color\": \"DeepSkyBlue\"}, \"type\": \"bar\", \"x\": [\"great app easy use\", \"love love love amazon\", \"best shop app ever\", \"love app easy use\", \"would give dig star\"], \"xaxis\": \"x4\", \"y\": [26, 19, 16, 15, 12], \"yaxis\": \"y4\"}, {\"marker\": {\"color\": \"Lightgrey\"}, \"type\": \"bar\", \"x\": [\"app\", \"use\", \"get\", \"order\", \"dig\"], \"xaxis\": \"x5\", \"y\": [3811, 1294, 1093, 1004, 967], \"yaxis\": \"y5\"}, {\"marker\": {\"color\": \"Lightgrey\"}, \"type\": \"bar\", \"x\": [\"wish list\", \"please fix\", \"use app\", \"every time\", \"nothe app\"], \"xaxis\": \"x6\", \"y\": [272, 252, 234, 170, 168], \"yaxis\": \"y6\"}, {\"marker\": {\"color\": \"Lightgrey\"}, \"type\": \"bar\", \"x\": [\"give dig star\", \"please bring back\", \"something go wrong\", \"purchase kindle book\", \"buy kindle book\"], \"xaxis\": \"x7\", \"y\": [54, 47, 43, 39, 30], \"yaxis\": \"y7\"}, {\"marker\": {\"color\": \"Lightgrey\"}, \"type\": \"bar\", \"x\": [\"would give dig star\", \"purchase kindle book app\", \"every time open app\", \"say something go wrong\", \"give app dig star\"], \"xaxis\": \"x8\", \"y\": [21, 14, 14, 12, 9], \"yaxis\": \"y8\"}, {\"marker\": {\"color\": \"Crimson\"}, \"type\": \"bar\", \"x\": [\"app\", \"get\", \"use\", \"amazon\", \"order\"], \"xaxis\": \"x9\", \"y\": [7422, 3340, 3162, 3127, 2930], \"yaxis\": \"y9\"}, {\"marker\": {\"color\": \"Crimson\"}, \"type\": \"bar\", \"x\": [\"customer service\", \"use app\", \"every time\", \"go back\", \"please fix\"], \"xaxis\": \"x10\", \"y\": [767, 560, 467, 394, 380], \"yaxis\": \"y10\"}, {\"marker\": {\"color\": \"Crimson\"}, \"type\": \"bar\", \"x\": [\"something go wrong\", \"go wrong end\", \"dig day ship\", \"oh something go\", \"every time try\"], \"xaxis\": \"x11\", \"y\": [304, 92, 88, 73, 71], \"yaxis\": \"y11\"}, {\"marker\": {\"color\": \"Crimson\"}, \"type\": \"bar\", \"x\": [\"something go wrong end\", \"oh something go wrong\", \"uh oh something go\", \"say something go wrong\", \"oops something go wrong\"], \"xaxis\": \"x12\", \"y\": [89, 73, 67, 50, 47], \"yaxis\": \"y12\"}],                        {\"annotations\": [{\"font\": {\"size\": 16}, \"showarrow\": false, \"text\": \"Mono-grams\", \"x\": 0.10375, \"xanchor\": \"center\", \"xref\": \"paper\", \"y\": 0.9999999999999999, \"yanchor\": \"bottom\", \"yref\": \"paper\"}, {\"font\": {\"size\": 16}, \"showarrow\": false, \"text\": \"Bi-grams\", \"x\": 0.36124999999999996, \"xanchor\": \"center\", \"xref\": \"paper\", \"y\": 0.9999999999999999, \"yanchor\": \"bottom\", \"yref\": \"paper\"}, {\"font\": {\"size\": 16}, \"showarrow\": false, \"text\": \"Tri-grams\", \"x\": 0.61875, \"xanchor\": \"center\", \"xref\": \"paper\", \"y\": 0.9999999999999999, \"yanchor\": \"bottom\", \"yref\": \"paper\"}, {\"font\": {\"size\": 16}, \"showarrow\": false, \"text\": \"Tetra-grams\", \"x\": 0.87625, \"xanchor\": \"center\", \"xref\": \"paper\", \"y\": 0.9999999999999999, \"yanchor\": \"bottom\", \"yref\": \"paper\"}, {\"font\": {\"size\": 16}, \"showarrow\": false, \"text\": \"Positive\", \"textangle\": 90, \"x\": 0.98, \"xanchor\": \"left\", \"xref\": \"paper\", \"y\": 0.8833333333333333, \"yanchor\": \"middle\", \"yref\": \"paper\"}, {\"font\": {\"size\": 16}, \"showarrow\": false, \"text\": \"Neutral\", \"textangle\": 90, \"x\": 0.98, \"xanchor\": \"left\", \"xref\": \"paper\", \"y\": 0.49999999999999994, \"yanchor\": \"middle\", \"yref\": \"paper\"}, {\"font\": {\"size\": 16}, \"showarrow\": false, \"text\": \"Negative\", \"textangle\": 90, \"x\": 0.98, \"xanchor\": \"left\", \"xref\": \"paper\", \"y\": 0.11666666666666665, \"yanchor\": \"middle\", \"yref\": \"paper\"}], \"height\": 900, \"showlegend\": false, \"template\": {\"data\": {\"bar\": [{\"error_x\": {\"color\": \"#2a3f5f\"}, \"error_y\": {\"color\": \"#2a3f5f\"}, \"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"bar\"}], \"barpolar\": [{\"marker\": {\"line\": {\"color\": \"#E5ECF6\", \"width\": 0.5}}, \"type\": \"barpolar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"baxis\": {\"endlinecolor\": \"#2a3f5f\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"#2a3f5f\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"choropleth\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"contour\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"contourcarpet\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmap\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"heatmapgl\"}], \"histogram\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"histogram\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2d\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"histogram2dcontour\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scattermapbox\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolar\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterpolargl\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}, \"colorscale\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"#EBF0F8\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"#C8D4E3\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowcolor\": \"#2a3f5f\", \"arrowhead\": 0, \"arrowwidth\": 1}, \"autotypenumbers\": \"strict\", \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 0, \"ticks\": \"\"}}, \"colorscale\": {\"diverging\": [[0, \"#8e0152\"], [0.1, \"#c51b7d\"], [0.2, \"#de77ae\"], [0.3, \"#f1b6da\"], [0.4, \"#fde0ef\"], [0.5, \"#f7f7f7\"], [0.6, \"#e6f5d0\"], [0.7, \"#b8e186\"], [0.8, \"#7fbc41\"], [0.9, \"#4d9221\"], [1, \"#276419\"]], \"sequential\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]], \"sequentialminus\": [[0.0, \"#0d0887\"], [0.1111111111111111, \"#46039f\"], [0.2222222222222222, \"#7201a8\"], [0.3333333333333333, \"#9c179e\"], [0.4444444444444444, \"#bd3786\"], [0.5555555555555556, \"#d8576b\"], [0.6666666666666666, \"#ed7953\"], [0.7777777777777778, \"#fb9f3a\"], [0.8888888888888888, \"#fdca26\"], [1.0, \"#f0f921\"]]}, \"colorway\": [\"#636efa\", \"#EF553B\", \"#00cc96\", \"#ab63fa\", \"#FFA15A\", \"#19d3f3\", \"#FF6692\", \"#B6E880\", \"#FF97FF\", \"#FECB52\"], \"font\": {\"color\": \"#2a3f5f\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"#E5ECF6\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"#E5ECF6\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"radialaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"yaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}, \"zaxis\": {\"backgroundcolor\": \"#E5ECF6\", \"gridcolor\": \"white\", \"gridwidth\": 2, \"linecolor\": \"white\", \"showbackground\": true, \"ticks\": \"\", \"zerolinecolor\": \"white\"}}, \"shapedefaults\": {\"line\": {\"color\": \"#2a3f5f\"}}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"baxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}, \"bgcolor\": \"#E5ECF6\", \"caxis\": {\"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"white\", \"linecolor\": \"white\", \"ticks\": \"\", \"title\": {\"standoff\": 15}, \"zerolinecolor\": \"white\", \"zerolinewidth\": 2}}}, \"width\": 1000, \"xaxis\": {\"anchor\": \"y\", \"domain\": [0.0, 0.2075]}, \"xaxis10\": {\"anchor\": \"y10\", \"domain\": [0.2575, 0.46499999999999997]}, \"xaxis11\": {\"anchor\": \"y11\", \"domain\": [0.515, 0.7225]}, \"xaxis12\": {\"anchor\": \"y12\", \"domain\": [0.7725, 0.98]}, \"xaxis2\": {\"anchor\": \"y2\", \"domain\": [0.2575, 0.46499999999999997]}, \"xaxis3\": {\"anchor\": \"y3\", \"domain\": [0.515, 0.7225]}, \"xaxis4\": {\"anchor\": \"y4\", \"domain\": [0.7725, 0.98]}, \"xaxis5\": {\"anchor\": \"y5\", \"domain\": [0.0, 0.2075]}, \"xaxis6\": {\"anchor\": \"y6\", \"domain\": [0.2575, 0.46499999999999997]}, \"xaxis7\": {\"anchor\": \"y7\", \"domain\": [0.515, 0.7225]}, \"xaxis8\": {\"anchor\": \"y8\", \"domain\": [0.7725, 0.98]}, \"xaxis9\": {\"anchor\": \"y9\", \"domain\": [0.0, 0.2075]}, \"yaxis\": {\"anchor\": \"x\", \"domain\": [0.7666666666666666, 0.9999999999999999]}, \"yaxis10\": {\"anchor\": \"x10\", \"domain\": [0.0, 0.2333333333333333]}, \"yaxis11\": {\"anchor\": \"x11\", \"domain\": [0.0, 0.2333333333333333]}, \"yaxis12\": {\"anchor\": \"x12\", \"domain\": [0.0, 0.2333333333333333]}, \"yaxis2\": {\"anchor\": \"x2\", \"domain\": [0.7666666666666666, 0.9999999999999999]}, \"yaxis3\": {\"anchor\": \"x3\", \"domain\": [0.7666666666666666, 0.9999999999999999]}, \"yaxis4\": {\"anchor\": \"x4\", \"domain\": [0.7666666666666666, 0.9999999999999999]}, \"yaxis5\": {\"anchor\": \"x5\", \"domain\": [0.3833333333333333, 0.6166666666666666]}, \"yaxis6\": {\"anchor\": \"x6\", \"domain\": [0.3833333333333333, 0.6166666666666666]}, \"yaxis7\": {\"anchor\": \"x7\", \"domain\": [0.3833333333333333, 0.6166666666666666]}, \"yaxis8\": {\"anchor\": \"x8\", \"domain\": [0.3833333333333333, 0.6166666666666666]}, \"yaxis9\": {\"anchor\": \"x9\", \"domain\": [0.0, 0.2333333333333333]}},                        {\"responsive\": true}                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('3a1c3d63-64b5-4d32-aad7-8fff34ea2f91');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })                };                });            </script>        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#for df in amazon_results:\n",
    "fig = make_subplots(rows=3, cols=4,\n",
    "                    vertical_spacing=0.15,\n",
    "                    column_titles =['Mono-grams','Bi-grams','Tri-grams','Tetra-grams'],\n",
    "                    row_titles =['Positive','Neutral','Negative'],                  \n",
    "      \n",
    "                   )\n",
    "#for df in amazon_results:\n",
    "fig.add_trace(go.Bar(\n",
    "            x = amazon_results[0][amazon_results[0].columns[0]].head(),\n",
    "            y = amazon_results[0][amazon_results[0].columns[1]].head(),\n",
    "            marker_color='DeepSkyBlue',\n",
    "            ),row=1, col=1)\n",
    "fig.add_trace(go.Bar(\n",
    "            x = amazon_results[1][amazon_results[1].columns[0]].head(),\n",
    "            y = amazon_results[1][amazon_results[1].columns[1]].head(),\n",
    "            marker_color='DeepSkyBlue',\n",
    "            ),row=1, col=2)\n",
    "fig.add_trace(go.Bar(\n",
    "            x = amazon_results[2][amazon_results[2].columns[0]].head(),\n",
    "            y = amazon_results[2][amazon_results[2].columns[1]].head(),\n",
    "            marker_color='DeepSkyBlue',\n",
    "            ),row=1, col=3)\n",
    "    # neu\n",
    "fig.add_trace(go.Bar(\n",
    "            x = amazon_results[3][amazon_results[3].columns[0]].head(),\n",
    "            y = amazon_results[3][amazon_results[3].columns[1]].head(),\n",
    "            marker_color='DeepSkyBlue',\n",
    "            ),row=1, col=4)\n",
    "fig.add_trace(go.Bar(\n",
    "            x = amazon_results[4][amazon_results[4].columns[0]].head(),\n",
    "            y = amazon_results[4][amazon_results[4].columns[1]].head(),\n",
    "            marker_color='Lightgrey',\n",
    "            ),row=2, col=1)\n",
    "fig.add_trace(go.Bar(\n",
    "            x = amazon_results[5][amazon_results[5].columns[0]].head(),\n",
    "            y = amazon_results[5][amazon_results[5].columns[1]].head(),\n",
    "            marker_color='Lightgrey',\n",
    "            ),row=2, col=2)\n",
    "    # neg\n",
    "fig.add_trace(go.Bar(\n",
    "            x = amazon_results[6][amazon_results[6].columns[0]].head(),\n",
    "            y = amazon_results[6][amazon_results[6].columns[1]].head(),\n",
    "            marker_color='Lightgrey',\n",
    "            ),row=2, col=3)\n",
    "fig.add_trace(go.Bar(\n",
    "            x = amazon_results[7][amazon_results[7].columns[0]].head(),\n",
    "            y = amazon_results[7][amazon_results[7].columns[1]].head(),\n",
    "            marker_color='Lightgrey',\n",
    "            ),row=2, col=4)\n",
    "fig.add_trace(go.Bar(\n",
    "            x = amazon_results[8][amazon_results[8].columns[0]].head(),\n",
    "            y = amazon_results[8][amazon_results[8].columns[1]].head(),\n",
    "            marker_color='Crimson',\n",
    "            ),row=3, col=1)\n",
    "fig.add_trace(go.Bar(\n",
    "            x = amazon_results[9][amazon_results[9].columns[0]].head(),\n",
    "            y = amazon_results[9][amazon_results[9].columns[1]].head(),\n",
    "            marker_color='Crimson',\n",
    "            ),row=3, col=2)\n",
    "fig.add_trace(go.Bar(\n",
    "            x = amazon_results[10][amazon_results[10].columns[0]].head(),\n",
    "            y = amazon_results[10][amazon_results[10].columns[1]].head(),\n",
    "            marker_color='Crimson',\n",
    "            ),row=3, col=3)\n",
    "fig.add_trace(go.Bar(\n",
    "            x = amazon_results[11][amazon_results[11].columns[0]].head(),\n",
    "            y = amazon_results[11][amazon_results[11].columns[1]].head(),\n",
    "            marker_color='Crimson',\n",
    "            ),row=3, col=4)\n",
    "\n",
    "\n",
    "    \n",
    "#\n",
    "fig.update_layout({\"showlegend\": False},height=900, width=1000)\n",
    "fig.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.118386,
     "end_time": "2021-03-08T20:38:31.401344",
     "exception": false,
     "start_time": "2021-03-08T20:38:31.282958",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "For positive reviews we usually see easy use, love shop amazon or great customer service. For neutral reviews some specific topics that maybe people are facing troubles and it should be improved like wish list, kindle book, amazon smile or something to bring back. Negative reviews usually see people talking about the latest updates and we see some error messages like \"something went wrong\" among more other things. \n",
    " \n",
    "It makes way more sense isn't it? \n",
    " \n",
    "When smaller is the n_gram shows more similarity between the sentiments and the opposite happens when we increase the number of grams.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.11835,
     "end_time": "2021-03-08T20:38:31.638408",
     "exception": false,
     "start_time": "2021-03-08T20:38:31.520058",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<a id=\"Modeling\"></a>\n",
    "# 7 - Modeling"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.118066,
     "end_time": "2021-03-08T20:38:31.875180",
     "exception": false,
     "start_time": "2021-03-08T20:38:31.757114",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Before we build our deep learning model, we are going to go through a few steps. The first one is to Split the data frame into Train and Test. Second, we will vectorize and embed the reviews. \n",
    "In order to prevent overfitting we will balance the train set and also reduce the amount of features of it. Then we are going to create 3  functions of metrics that will be used into our model.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.118966,
     "end_time": "2021-03-08T20:38:32.114305",
     "exception": false,
     "start_time": "2021-03-08T20:38:31.995339",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<a id=\"TTS\"></a>\n",
    "## 7.1 - Train Test Split"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.119751,
     "end_time": "2021-03-08T20:38:32.352438",
     "exception": false,
     "start_time": "2021-03-08T20:38:32.232687",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Now, we will divide our data into training and test sets using sklearn.model_selection module train_test_split."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:38:32.595714Z",
     "iopub.status.busy": "2021-03-08T20:38:32.594778Z",
     "iopub.status.idle": "2021-03-08T20:38:32.598412Z",
     "shell.execute_reply": "2021-03-08T20:38:32.597745Z"
    },
    "papermill": {
     "duration": 0.126452,
     "end_time": "2021-03-08T20:38:32.598559",
     "exception": false,
     "start_time": "2021-03-08T20:38:32.472107",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:38:32.841292Z",
     "iopub.status.busy": "2021-03-08T20:38:32.840497Z",
     "iopub.status.idle": "2021-03-08T20:38:32.844000Z",
     "shell.execute_reply": "2021-03-08T20:38:32.843458Z"
    },
    "papermill": {
     "duration": 0.127405,
     "end_time": "2021-03-08T20:38:32.844144",
     "exception": false,
     "start_time": "2021-03-08T20:38:32.716739",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "y =  df[df.columns[1:]].values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:38:33.089045Z",
     "iopub.status.busy": "2021-03-08T20:38:33.088352Z",
     "iopub.status.idle": "2021-03-08T20:38:33.111232Z",
     "shell.execute_reply": "2021-03-08T20:38:33.110636Z"
    },
    "papermill": {
     "duration": 0.145478,
     "end_time": "2021-03-08T20:38:33.111391",
     "exception": false,
     "start_time": "2021-03-08T20:38:32.965913",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "X = []\n",
    "\n",
    "sentences = list(df[\"reviews\"])\n",
    "for sen in sentences:\n",
    "    X.append(sen)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:38:33.354084Z",
     "iopub.status.busy": "2021-03-08T20:38:33.353405Z",
     "iopub.status.idle": "2021-03-08T20:38:33.378987Z",
     "shell.execute_reply": "2021-03-08T20:38:33.379497Z"
    },
    "papermill": {
     "duration": 0.149956,
     "end_time": "2021-03-08T20:38:33.379704",
     "exception": false,
     "start_time": "2021-03-08T20:38:33.229748",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state=42)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.118436,
     "end_time": "2021-03-08T20:38:33.616676",
     "exception": false,
     "start_time": "2021-03-08T20:38:33.498240",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<a id=\"E\"></a>\n",
    "## 7.2 - Embedding"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.118003,
     "end_time": "2021-03-08T20:38:33.853228",
     "exception": false,
     "start_time": "2021-03-08T20:38:33.735225",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "We need to convert text inputs into embedded vectors such that we can apply deep learning. In word embeddings, every word is represented as an n-dimensional dense vector. The words that are similar will have similar vectors. [See more about embedding](https://stackabuse.com/python-for-nlp-word-embeddings-for-deep-learning-in-keras/)\n",
    " \n",
    " In order to embed our text, first we need to transform our reviews into vector representations. Here we will use Tokenizer module from keras.preprocessing.text to vectorize the text corpus and we will need the module pad_sequences  from keras.preprocessing.sequence to ensure that all sequences in the list of words have the same length. \n",
    " \n",
    "After vectorising the text and ensuring that all sequences have the same length we will use the GloVe, Global Vectors For Word Representation to convert text inputs to their numeric counterparts. [See more about GloVe](https://nlp.stanford.edu/projects/glove/)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:38:34.097370Z",
     "iopub.status.busy": "2021-03-08T20:38:34.096593Z",
     "iopub.status.idle": "2021-03-08T20:38:39.965520Z",
     "shell.execute_reply": "2021-03-08T20:38:39.964504Z"
    },
    "papermill": {
     "duration": 5.992196,
     "end_time": "2021-03-08T20:38:39.965718",
     "exception": false,
     "start_time": "2021-03-08T20:38:33.973522",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from tensorflow.keras.preprocessing.text import Tokenizer\n",
    "from tensorflow.keras.preprocessing.sequence import pad_sequences"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:38:40.255562Z",
     "iopub.status.busy": "2021-03-08T20:38:40.250296Z",
     "iopub.status.idle": "2021-03-08T20:38:42.660178Z",
     "shell.execute_reply": "2021-03-08T20:38:42.659576Z"
    },
    "papermill": {
     "duration": 2.54721,
     "end_time": "2021-03-08T20:38:42.660328",
     "exception": false,
     "start_time": "2021-03-08T20:38:40.113118",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Defining the num of words\n",
    "tokenizer = Tokenizer(num_words=5000)\n",
    "# Fighting in the X df\n",
    "tokenizer.fit_on_texts(X)\n",
    "\n",
    "# Tokenizing Train and test\n",
    "\n",
    "X_prep = tokenizer.texts_to_sequences(X_train)\n",
    "X_test = tokenizer.texts_to_sequences(X_test)\n",
    "\n",
    "vocab_size = len(tokenizer.word_index) + 1\n",
    "\n",
    "# Setting the max length of features\n",
    "\n",
    "maxlen = 200\n",
    "\n",
    "# Ensuring the all sequences have the same length\n",
    "X_train = pad_sequences(X_prep, padding='post', maxlen=maxlen)\n",
    "X_test = pad_sequences(X_test, padding='post', maxlen=maxlen)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.118427,
     "end_time": "2021-03-08T20:38:42.898418",
     "exception": false,
     "start_time": "2021-03-08T20:38:42.779991",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "We will be using numpy arrays and GloVe word embeddings to convert text inputs to their numeric counterparts."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:38:43.147234Z",
     "iopub.status.busy": "2021-03-08T20:38:43.146500Z",
     "iopub.status.idle": "2021-03-08T20:38:43.149743Z",
     "shell.execute_reply": "2021-03-08T20:38:43.149115Z"
    },
    "papermill": {
     "duration": 0.127927,
     "end_time": "2021-03-08T20:38:43.149901",
     "exception": false,
     "start_time": "2021-03-08T20:38:43.021974",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from numpy import array\n",
    "from numpy import asarray\n",
    "from numpy import zeros"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:38:43.394392Z",
     "iopub.status.busy": "2021-03-08T20:38:43.393573Z",
     "iopub.status.idle": "2021-03-08T20:39:02.120085Z",
     "shell.execute_reply": "2021-03-08T20:39:02.119436Z"
    },
    "papermill": {
     "duration": 18.851848,
     "end_time": "2021-03-08T20:39:02.120241",
     "exception": false,
     "start_time": "2021-03-08T20:38:43.268393",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "embeddings_dictionary = dict()\n",
    "\n",
    "glove_file = open('../input/glove6b100dtxt/glove.6B.100d.txt', encoding=\"utf8\")\n",
    "\n",
    "for line in glove_file:\n",
    "    records = line.split()\n",
    "    word = records[0]\n",
    "    vector_dimensions = asarray(records[1:], dtype='float32')\n",
    "    embeddings_dictionary[word] = vector_dimensions\n",
    "glove_file.close()\n",
    "\n",
    "embedding_matrix = zeros((vocab_size, 100))\n",
    "for word, index in tokenizer.word_index.items():\n",
    "    embedding_vector = embeddings_dictionary.get(word)\n",
    "    if embedding_vector is not None:\n",
    "        embedding_matrix[index] = embedding_vector"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.117511,
     "end_time": "2021-03-08T20:39:02.356765",
     "exception": false,
     "start_time": "2021-03-08T20:39:02.239254",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<a id=\"B\"></a>\n",
    "## 7.3 - Balancing"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.117602,
     "end_time": "2021-03-08T20:39:02.592242",
     "exception": false,
     "start_time": "2021-03-08T20:39:02.474640",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "As seen before, the data set is highly unbalanced, to be more precise in the results we will balance the dataset using the imblearn Random OverSampling technique."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:39:02.834446Z",
     "iopub.status.busy": "2021-03-08T20:39:02.833676Z",
     "iopub.status.idle": "2021-03-08T20:39:02.844395Z",
     "shell.execute_reply": "2021-03-08T20:39:02.844875Z"
    },
    "papermill": {
     "duration": 0.135117,
     "end_time": "2021-03-08T20:39:02.845053",
     "exception": false,
     "start_time": "2021-03-08T20:39:02.709936",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Negative 20152\n",
      "Neutral 4346\n",
      "Positve 16190\n"
     ]
    }
   ],
   "source": [
    "print('Negative',pd.DataFrame(y_train).sum()[0])\n",
    "print('Neutral',pd.DataFrame(y_train).sum()[1])\n",
    "print('Positve',pd.DataFrame(y_train).sum()[2])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:39:03.092731Z",
     "iopub.status.busy": "2021-03-08T20:39:03.091954Z",
     "iopub.status.idle": "2021-03-08T20:39:03.415256Z",
     "shell.execute_reply": "2021-03-08T20:39:03.414651Z"
    },
    "papermill": {
     "duration": 0.449084,
     "end_time": "2021-03-08T20:39:03.415416",
     "exception": false,
     "start_time": "2021-03-08T20:39:02.966332",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from imblearn.over_sampling import RandomOverSampler"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:39:03.660752Z",
     "iopub.status.busy": "2021-03-08T20:39:03.659978Z",
     "iopub.status.idle": "2021-03-08T20:39:03.751577Z",
     "shell.execute_reply": "2021-03-08T20:39:03.752590Z"
    },
    "papermill": {
     "duration": 0.217549,
     "end_time": "2021-03-08T20:39:03.752921",
     "exception": false,
     "start_time": "2021-03-08T20:39:03.535372",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.7/site-packages/sklearn/utils/validation.py:72: FutureWarning:\n",
      "\n",
      "Pass classes=[0 1 2] as keyword args. From version 1.0 (renaming of 0.25) passing these as positional arguments will result in an error\n",
      "\n"
     ]
    }
   ],
   "source": [
    "over = RandomOverSampler()\n",
    "    \n",
    "X_ov, y_ov = over.fit_resample(X_train, y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:39:04.003231Z",
     "iopub.status.busy": "2021-03-08T20:39:04.002249Z",
     "iopub.status.idle": "2021-03-08T20:39:04.013210Z",
     "shell.execute_reply": "2021-03-08T20:39:04.013713Z"
    },
    "papermill": {
     "duration": 0.13899,
     "end_time": "2021-03-08T20:39:04.013899",
     "exception": false,
     "start_time": "2021-03-08T20:39:03.874909",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Negative 20152\n",
      "Neutral 20152\n",
      "Positve 20152\n"
     ]
    }
   ],
   "source": [
    "print('Negative',pd.DataFrame(y_ov).sum()[0])\n",
    "print('Neutral',pd.DataFrame(y_ov).sum()[1])\n",
    "print('Positve',pd.DataFrame(y_ov).sum()[2])\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.120801,
     "end_time": "2021-03-08T20:39:04.255346",
     "exception": false,
     "start_time": "2021-03-08T20:39:04.134545",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<a id=\"FS\"></a>\n",
    "## 7.4 - Featuring Selection"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.118467,
     "end_time": "2021-03-08T20:39:04.492752",
     "exception": false,
     "start_time": "2021-03-08T20:39:04.374285",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "In order to prevent overfitting we are going to reduce the features of the data frame. To do that we are going to use one of the simplest and most common ways to select relevant features for classification which is to calculate the F-Score for each feature. \n",
    " \n",
    "The F-Score is calculated using the variance between the features and the variance within each feature. A small F-score usually means that the feature is less important than a feature with a high F-score. We will calculate the F-Score of the features per sentiment using sklearn modules SelectKBest and f_classif to return the ANOVA F-value.\n",
    " \n",
    " \n",
    "I highly recommend see the Nils Schl√ºter [Medium article](https://towardsdatascience.com/dont-overfit-how-to-prevent-overfitting-in-your-deep-learning-models-63274e552323) for more ways to prevent overfitting in Deep Learning Models.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:39:04.736716Z",
     "iopub.status.busy": "2021-03-08T20:39:04.736066Z",
     "iopub.status.idle": "2021-03-08T20:39:04.754147Z",
     "shell.execute_reply": "2021-03-08T20:39:04.753538Z"
    },
    "papermill": {
     "duration": 0.142944,
     "end_time": "2021-03-08T20:39:04.754305",
     "exception": false,
     "start_time": "2021-03-08T20:39:04.611361",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from sklearn.feature_selection import f_classif, SelectKBest"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:39:05.000893Z",
     "iopub.status.busy": "2021-03-08T20:39:04.999541Z",
     "iopub.status.idle": "2021-03-08T20:39:05.228428Z",
     "shell.execute_reply": "2021-03-08T20:39:05.229084Z"
    },
    "papermill": {
     "duration": 0.355941,
     "end_time": "2021-03-08T20:39:05.229283",
     "exception": false,
     "start_time": "2021-03-08T20:39:04.873342",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "selected_features = [] \n",
    "for label in range(0,3):\n",
    "    selector = SelectKBest(f_classif, k='all')\n",
    "    selector.fit(X_ov, pd.DataFrame(y_ov)[label])\n",
    "    selected_features.append(list(selector.scores_))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:39:05.501019Z",
     "iopub.status.busy": "2021-03-08T20:39:05.500322Z",
     "iopub.status.idle": "2021-03-08T20:39:05.716384Z",
     "shell.execute_reply": "2021-03-08T20:39:05.716936Z"
    },
    "papermill": {
     "duration": 0.353487,
     "end_time": "2021-03-08T20:39:05.717113",
     "exception": false,
     "start_time": "2021-03-08T20:39:05.363626",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(8, 5))\n",
    "plt.plot(selected_features[0])\n",
    "plt.plot(selected_features[1])\n",
    "plt.plot(selected_features[2])\n",
    "\n",
    "plt.title('ANOVA F-value')\n",
    "plt.ylabel('F-value')\n",
    "plt.xlabel('n_feature')\n",
    "plt.legend(['negative','neutral','positive'], loc='upper right')\n",
    "\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.120885,
     "end_time": "2021-03-08T20:39:05.960373",
     "exception": false,
     "start_time": "2021-03-08T20:39:05.839488",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    " As seeing, usually the reviews have the highest F-Scores till the feature around 10. After that the F_store is visually decreasing. \n",
    "So, we will arbitrarily drop the features after the 20.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:39:06.214460Z",
     "iopub.status.busy": "2021-03-08T20:39:06.213761Z",
     "iopub.status.idle": "2021-03-08T20:39:06.467204Z",
     "shell.execute_reply": "2021-03-08T20:39:06.467765Z"
    },
    "papermill": {
     "duration": 0.377677,
     "end_time": "2021-03-08T20:39:06.467973",
     "exception": false,
     "start_time": "2021-03-08T20:39:06.090296",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(8, 5))\n",
    "plt.plot(pd.DataFrame(selected_features).T[:20][0])\n",
    "plt.plot(pd.DataFrame(selected_features).T[:20][1])\n",
    "plt.plot(pd.DataFrame(selected_features).T[:20][2])\n",
    "\n",
    "plt.title('ANOVA F-value')\n",
    "plt.ylabel('F-value')\n",
    "plt.xlabel('n_feature')\n",
    "plt.legend(['negative','neutral','positive'], loc='upper right')\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:39:06.718268Z",
     "iopub.status.busy": "2021-03-08T20:39:06.717568Z",
     "iopub.status.idle": "2021-03-08T20:39:06.721668Z",
     "shell.execute_reply": "2021-03-08T20:39:06.721072Z"
    },
    "papermill": {
     "duration": 0.129573,
     "end_time": "2021-03-08T20:39:06.721810",
     "exception": false,
     "start_time": "2021-03-08T20:39:06.592237",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "X_ov=X_ov[:,:20]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.122973,
     "end_time": "2021-03-08T20:39:06.967421",
     "exception": false,
     "start_time": "2021-03-08T20:39:06.844448",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<a id=\"EM\"></a>\n",
    "## 7.5 -  Evaluation Metrics"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.122353,
     "end_time": "2021-03-08T20:39:07.213309",
     "exception": false,
     "start_time": "2021-03-08T20:39:07.090956",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "To go beyond just the Accuracy metric we will calculate also the  Recall, Precision and F1 Score manually.\n",
    "\n",
    "Reviewing accuracy, recall, precision and f1 score. We are using the [Exsilio Solutions](https://blog.exsilio.com/all/accuracy-precision-recall-f1-score-interpretation-of-performance-measures/#:~:text=F1%20score%20%2D%20F1%20Score%20is,have%20an%20uneven%20class%20distribution) explanations.\n",
    "\n",
    "   * TP - True Positive\n",
    "   * TN - True Negative\n",
    "   * FP - False Positive\n",
    "   * FN - False Negative\n",
    "\n",
    "**Accuracy** -  \"Is a great measure but only when you have symmetric datasets where values of false positive and false negatives are almost same\" \n",
    " \n",
    "   * Accuracy = TP+TN/TP+FP+FN+TN\n",
    "\n",
    "\n",
    "**Precision** - \"Precision is the ratio of correctly predicted positive observations to the total predicted positive observations\"\n",
    "\n",
    "   * Precision = TP/TP+FP\n",
    "\n",
    "**Recall** - \"Recall is the ratio of correctly predicted positive observations to the all observations in actual class\"\n",
    "   * Recall = TP/TP+FN\n",
    "\n",
    "**F1 score** - \"F1 Score is the weighted average of Precision and Recall. Therefore, this score takes both false positives and false negatives into account. Intuitively it is not as easy to understand as accuracy, but F1 is usually more useful than accuracy, especially if you have an uneven class distribution.\"\n",
    "\n",
    "   * F1 Score  = 2*(Recall * Precision) / (Recall + Precision)\n",
    " \n",
    "Those metrics have been removed from Keras core. [See the release notes](https://github.com/keras-team/keras/wiki/Keras-2.0-release-notes). \n",
    " \n",
    "So to do that we will use the three following functions that will be called by the Neural Networks.\n",
    "That functions are made by [Tasos](https://datascience.stackexchange.com/users/201/tasos) answering a question at [Stack Exchange](https://datascience.stackexchange.com/questions/45165/how-to-get-accuracy-f1-precision-and-recall-for-a-keras-model)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:39:07.464919Z",
     "iopub.status.busy": "2021-03-08T20:39:07.464240Z",
     "iopub.status.idle": "2021-03-08T20:39:07.467209Z",
     "shell.execute_reply": "2021-03-08T20:39:07.466573Z"
    },
    "papermill": {
     "duration": 0.131566,
     "end_time": "2021-03-08T20:39:07.467357",
     "exception": false,
     "start_time": "2021-03-08T20:39:07.335791",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from tensorflow.keras import backend as K"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:39:07.719610Z",
     "iopub.status.busy": "2021-03-08T20:39:07.716510Z",
     "iopub.status.idle": "2021-03-08T20:39:07.722591Z",
     "shell.execute_reply": "2021-03-08T20:39:07.721938Z"
    },
    "papermill": {
     "duration": 0.131418,
     "end_time": "2021-03-08T20:39:07.722733",
     "exception": false,
     "start_time": "2021-03-08T20:39:07.591315",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def recall_m(y_true, y_pred):\n",
    "    true_positives = K.sum(K.round(K.clip(y_true * y_pred, 0, 1)))\n",
    "    possible_positives = K.sum(K.round(K.clip(y_true, 0, 1)))\n",
    "    recall = true_positives / (possible_positives + K.epsilon())\n",
    "    return recall\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:39:07.974792Z",
     "iopub.status.busy": "2021-03-08T20:39:07.974078Z",
     "iopub.status.idle": "2021-03-08T20:39:07.977566Z",
     "shell.execute_reply": "2021-03-08T20:39:07.976888Z"
    },
    "papermill": {
     "duration": 0.132464,
     "end_time": "2021-03-08T20:39:07.977715",
     "exception": false,
     "start_time": "2021-03-08T20:39:07.845251",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "\n",
    "def precision_m(y_true, y_pred):\n",
    "    true_positives = K.sum(K.round(K.clip(y_true * y_pred, 0, 1)))\n",
    "    predicted_positives = K.sum(K.round(K.clip(y_pred, 0, 1)))\n",
    "    precision = true_positives / (predicted_positives + K.epsilon())\n",
    "    return precision"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:39:08.231750Z",
     "iopub.status.busy": "2021-03-08T20:39:08.231068Z",
     "iopub.status.idle": "2021-03-08T20:39:08.235482Z",
     "shell.execute_reply": "2021-03-08T20:39:08.234614Z"
    },
    "papermill": {
     "duration": 0.133445,
     "end_time": "2021-03-08T20:39:08.235665",
     "exception": false,
     "start_time": "2021-03-08T20:39:08.102220",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def f1_m(y_true, y_pred):\n",
    "    precision = precision_m(y_true, y_pred)\n",
    "    recall = recall_m(y_true, y_pred)\n",
    "    return 2*((precision*recall)/(precision+recall+K.epsilon()))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.130314,
     "end_time": "2021-03-08T20:39:08.507834",
     "exception": false,
     "start_time": "2021-03-08T20:39:08.377520",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<a id=\"NN\"></a>\n",
    "## 7.6 -  Neural Networks"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.129407,
     "end_time": "2021-03-08T20:39:08.772420",
     "exception": false,
     "start_time": "2021-03-08T20:39:08.643013",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "To create a model to predict the text sentiment, we will have one input layer shape 20, the number of features. One Embedding Layer that takes the vocab size and the embedding matrix created before. One Long Short-Term Memory (LSTM) layer with 128 neurons and finely the output layer with 3 neurons since we have 3 labels in the output, Positive, Neutral and Negative.\n",
    "\n",
    "We are going to use keras model module and keras.layers, Dense, LSTM and Embedding.\n",
    "\n",
    "For the metrics we will set Accuracy, F1, Precision and Recall that we defined above.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:39:09.040712Z",
     "iopub.status.busy": "2021-03-08T20:39:09.039940Z",
     "iopub.status.idle": "2021-03-08T20:39:09.043357Z",
     "shell.execute_reply": "2021-03-08T20:39:09.042745Z"
    },
    "papermill": {
     "duration": 0.137911,
     "end_time": "2021-03-08T20:39:09.043502",
     "exception": false,
     "start_time": "2021-03-08T20:39:08.905591",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "from tensorflow.keras import Model\n",
    "from tensorflow.keras.layers import Dense, LSTM, Input, Embedding"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:39:09.306599Z",
     "iopub.status.busy": "2021-03-08T20:39:09.305705Z",
     "iopub.status.idle": "2021-03-08T20:39:09.717911Z",
     "shell.execute_reply": "2021-03-08T20:39:09.717106Z"
    },
    "papermill": {
     "duration": 0.546113,
     "end_time": "2021-03-08T20:39:09.718065",
     "exception": false,
     "start_time": "2021-03-08T20:39:09.171952",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "deep_inputs = Input(shape=(20,))\n",
    "embedding_layer = Embedding(vocab_size, 100, weights=[embedding_matrix], trainable=False)(deep_inputs)\n",
    "LSTM_Layer_1 = LSTM(128)(embedding_layer)\n",
    "dense_layer_1 = Dense(3, activation='sigmoid')(LSTM_Layer_1)\n",
    "model = Model(inputs=deep_inputs, outputs=dense_layer_1)\n",
    "\n",
    "model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['acc',f1_m,precision_m, recall_m])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.122961,
     "end_time": "2021-03-08T20:39:09.965879",
     "exception": false,
     "start_time": "2021-03-08T20:39:09.842918",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "\n",
    "Printing the model summary:\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:39:10.222783Z",
     "iopub.status.busy": "2021-03-08T20:39:10.221832Z",
     "iopub.status.idle": "2021-03-08T20:39:10.228350Z",
     "shell.execute_reply": "2021-03-08T20:39:10.227449Z"
    },
    "papermill": {
     "duration": 0.135725,
     "end_time": "2021-03-08T20:39:10.228560",
     "exception": false,
     "start_time": "2021-03-08T20:39:10.092835",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"model\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "input_1 (InputLayer)         [(None, 20)]              0         \n",
      "_________________________________________________________________\n",
      "embedding (Embedding)        (None, 20, 100)           1910900   \n",
      "_________________________________________________________________\n",
      "lstm (LSTM)                  (None, 128)               117248    \n",
      "_________________________________________________________________\n",
      "dense (Dense)                (None, 3)                 387       \n",
      "=================================================================\n",
      "Total params: 2,028,535\n",
      "Trainable params: 117,635\n",
      "Non-trainable params: 1,910,900\n",
      "_________________________________________________________________\n",
      "None\n"
     ]
    }
   ],
   "source": [
    "print(model.summary())"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.123791,
     "end_time": "2021-03-08T20:39:10.476356",
     "exception": false,
     "start_time": "2021-03-08T20:39:10.352565",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "To visualize, we will printing the architecture of our neural network with the plot_model from keras utils"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:39:10.775985Z",
     "iopub.status.busy": "2021-03-08T20:39:10.775082Z",
     "iopub.status.idle": "2021-03-08T20:39:11.390646Z",
     "shell.execute_reply": "2021-03-08T20:39:11.391239Z"
    },
    "papermill": {
     "duration": 0.745504,
     "end_time": "2021-03-08T20:39:11.391422",
     "exception": false,
     "start_time": "2021-03-08T20:39:10.645918",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<IPython.core.display.Image object>"
      ]
     },
     "execution_count": 73,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from tensorflow.keras.utils import plot_model\n",
    "\n",
    "plot_model(model, to_file='model_plot4a.png', show_shapes=True, show_layer_names=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 0.123988,
     "end_time": "2021-03-08T20:39:11.639496",
     "exception": false,
     "start_time": "2021-03-08T20:39:11.515508",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Let's train our model with 0.7 of the random oversampling DF. Batch_size 32 and apochs 10. The other 0.3 of the DF will be used for the validation."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:39:11.895131Z",
     "iopub.status.busy": "2021-03-08T20:39:11.894095Z",
     "iopub.status.idle": "2021-03-08T20:49:05.836748Z",
     "shell.execute_reply": "2021-03-08T20:49:05.835687Z"
    },
    "papermill": {
     "duration": 594.071723,
     "end_time": "2021-03-08T20:49:05.836963",
     "exception": false,
     "start_time": "2021-03-08T20:39:11.765240",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/15\n",
      "1323/1323 [==============================] - 43s 31ms/step - loss: 0.4545 - acc: 0.6885 - f1_m: 0.6477 - precision_m: 0.7148 - recall_m: 0.6083 - val_loss: 0.7712 - val_acc: 0.2029 - val_f1_m: 0.1604 - val_precision_m: 0.1760 - val_recall_m: 0.1477\n",
      "Epoch 2/15\n",
      "1323/1323 [==============================] - 39s 29ms/step - loss: 0.3838 - acc: 0.7447 - f1_m: 0.7353 - precision_m: 0.7895 - recall_m: 0.6900 - val_loss: 0.8748 - val_acc: 0.1722 - val_f1_m: 0.1501 - val_precision_m: 0.1623 - val_recall_m: 0.1399\n",
      "Epoch 3/15\n",
      "1323/1323 [==============================] - 39s 29ms/step - loss: 0.3674 - acc: 0.7547 - f1_m: 0.7463 - precision_m: 0.8000 - recall_m: 0.7011 - val_loss: 0.7498 - val_acc: 0.2371 - val_f1_m: 0.1897 - val_precision_m: 0.2013 - val_recall_m: 0.1797\n",
      "Epoch 4/15\n",
      "1323/1323 [==============================] - 39s 29ms/step - loss: 0.3533 - acc: 0.7648 - f1_m: 0.7569 - precision_m: 0.8065 - recall_m: 0.7147 - val_loss: 0.7971 - val_acc: 0.2822 - val_f1_m: 0.2234 - val_precision_m: 0.2387 - val_recall_m: 0.2109\n",
      "Epoch 5/15\n",
      "1323/1323 [==============================] - 40s 30ms/step - loss: 0.3397 - acc: 0.7775 - f1_m: 0.7689 - precision_m: 0.8153 - recall_m: 0.7290 - val_loss: 0.7449 - val_acc: 0.3256 - val_f1_m: 0.2621 - val_precision_m: 0.2811 - val_recall_m: 0.2467\n",
      "Epoch 6/15\n",
      "1323/1323 [==============================] - 39s 29ms/step - loss: 0.3274 - acc: 0.7876 - f1_m: 0.7809 - precision_m: 0.8233 - recall_m: 0.7441 - val_loss: 0.7357 - val_acc: 0.3781 - val_f1_m: 0.3251 - val_precision_m: 0.3555 - val_recall_m: 0.3015\n",
      "Epoch 7/15\n",
      "1323/1323 [==============================] - 39s 30ms/step - loss: 0.3035 - acc: 0.8019 - f1_m: 0.7968 - precision_m: 0.8360 - recall_m: 0.7623 - val_loss: 0.7287 - val_acc: 0.3931 - val_f1_m: 0.3294 - val_precision_m: 0.3632 - val_recall_m: 0.3033\n",
      "Epoch 8/15\n",
      "1323/1323 [==============================] - 39s 29ms/step - loss: 0.2833 - acc: 0.8170 - f1_m: 0.8119 - precision_m: 0.8504 - recall_m: 0.7780 - val_loss: 0.5706 - val_acc: 0.4885 - val_f1_m: 0.4386 - val_precision_m: 0.4977 - val_recall_m: 0.3963\n",
      "Epoch 9/15\n",
      "1323/1323 [==============================] - 39s 30ms/step - loss: 0.2635 - acc: 0.8301 - f1_m: 0.8254 - precision_m: 0.8593 - recall_m: 0.7953 - val_loss: 0.5675 - val_acc: 0.5556 - val_f1_m: 0.5097 - val_precision_m: 0.5741 - val_recall_m: 0.4630\n",
      "Epoch 10/15\n",
      "1323/1323 [==============================] - 38s 29ms/step - loss: 0.2406 - acc: 0.8503 - f1_m: 0.8468 - precision_m: 0.8789 - recall_m: 0.8182 - val_loss: 0.4643 - val_acc: 0.6647 - val_f1_m: 0.6501 - val_precision_m: 0.6905 - val_recall_m: 0.6158\n",
      "Epoch 11/15\n",
      "1323/1323 [==============================] - 38s 29ms/step - loss: 0.2189 - acc: 0.8650 - f1_m: 0.8642 - precision_m: 0.8927 - recall_m: 0.8384 - val_loss: 0.4222 - val_acc: 0.7065 - val_f1_m: 0.6788 - val_precision_m: 0.7455 - val_recall_m: 0.6265\n",
      "Epoch 12/15\n",
      "1323/1323 [==============================] - 47s 35ms/step - loss: 0.1937 - acc: 0.8838 - f1_m: 0.8809 - precision_m: 0.9072 - recall_m: 0.8570 - val_loss: 0.4094 - val_acc: 0.7251 - val_f1_m: 0.7091 - val_precision_m: 0.7561 - val_recall_m: 0.6699\n",
      "Epoch 13/15\n",
      "1323/1323 [==============================] - 39s 29ms/step - loss: 0.1711 - acc: 0.8976 - f1_m: 0.8953 - precision_m: 0.9183 - recall_m: 0.8743 - val_loss: 0.3342 - val_acc: 0.7851 - val_f1_m: 0.7761 - val_precision_m: 0.8123 - val_recall_m: 0.7443\n",
      "Epoch 14/15\n",
      "1323/1323 [==============================] - 38s 29ms/step - loss: 0.1581 - acc: 0.9096 - f1_m: 0.9090 - precision_m: 0.9282 - recall_m: 0.8913 - val_loss: 0.2888 - val_acc: 0.8193 - val_f1_m: 0.8159 - val_precision_m: 0.8447 - val_recall_m: 0.7903\n",
      "Epoch 15/15\n",
      "1323/1323 [==============================] - 39s 29ms/step - loss: 0.1389 - acc: 0.9205 - f1_m: 0.9211 - precision_m: 0.9379 - recall_m: 0.9055 - val_loss: 0.2308 - val_acc: 0.8622 - val_f1_m: 0.8625 - val_precision_m: 0.8908 - val_recall_m: 0.8371\n"
     ]
    }
   ],
   "source": [
    "history = model.fit(X_ov, y_ov, batch_size=32, epochs=15, verbose=1, validation_split=0.3)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 2.484592,
     "end_time": "2021-03-08T20:49:10.892657",
     "exception": false,
     "start_time": "2021-03-08T20:49:08.408065",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<a id=\"Results\"></a>\n",
    "# 8 - Results"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 2.523157,
     "end_time": "2021-03-08T20:49:15.891095",
     "exception": false,
     "start_time": "2021-03-08T20:49:13.367938",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Now let's plot the results that our model got. First let's plot the history of the metrics that the model got during the 10 epochs in the train and in the validation data set. \n",
    "Then we are going to build a table to see the metrics \n",
    "achieved in the train and in the test data set and finely we will build a function that put our model in context getting a human comment, appling the text preprocessing and the model to plot the label predicted by our model.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 2.470201,
     "end_time": "2021-03-08T20:49:20.867726",
     "exception": false,
     "start_time": "2021-03-08T20:49:18.397525",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<a id=\"PH\"></a>\n",
    "## 8.1 -  Plotting History"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 2.468185,
     "end_time": "2021-03-08T20:49:25.864241",
     "exception": false,
     "start_time": "2021-03-08T20:49:23.396056",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Now, we are going to use matplotlib again to plot the model History that recorded training and validation metrics for each epoch. The results obtained in history for Loss, Accuracy, Precision, Recall and F1 score for Training in blue and Validation in orange."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 2.550801,
     "end_time": "2021-03-08T20:49:30.932820",
     "exception": false,
     "start_time": "2021-03-08T20:49:28.382019",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Loss"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:49:35.876301Z",
     "iopub.status.busy": "2021-03-08T20:49:35.875629Z",
     "iopub.status.idle": "2021-03-08T20:49:36.055786Z",
     "shell.execute_reply": "2021-03-08T20:49:36.056324Z"
    },
    "papermill": {
     "duration": 2.663323,
     "end_time": "2021-03-08T20:49:36.056497",
     "exception": false,
     "start_time": "2021-03-08T20:49:33.393174",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(history.history['loss'])\n",
    "plt.plot(history.history['val_loss'])\n",
    "\n",
    "plt.title('model loss')\n",
    "plt.ylabel('loss')\n",
    "plt.xlabel('epoch')\n",
    "plt.legend(['train','val'], loc='upper left')\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 2.526167,
     "end_time": "2021-03-08T20:49:41.147126",
     "exception": false,
     "start_time": "2021-03-08T20:49:38.620959",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Accuracy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:49:46.160620Z",
     "iopub.status.busy": "2021-03-08T20:49:46.159614Z",
     "iopub.status.idle": "2021-03-08T20:49:46.350489Z",
     "shell.execute_reply": "2021-03-08T20:49:46.350963Z"
    },
    "papermill": {
     "duration": 2.72852,
     "end_time": "2021-03-08T20:49:46.351151",
     "exception": false,
     "start_time": "2021-03-08T20:49:43.622631",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(history.history['acc'])\n",
    "plt.plot(history.history['val_acc'])\n",
    "\n",
    "plt.title('model accuracy')\n",
    "plt.ylabel('accuracy')\n",
    "plt.xlabel('epoch')\n",
    "plt.legend(['train','val'], loc='upper left')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 2.518392,
     "end_time": "2021-03-08T20:49:51.356654",
     "exception": false,
     "start_time": "2021-03-08T20:49:48.838262",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Precision"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:49:56.372581Z",
     "iopub.status.busy": "2021-03-08T20:49:56.371908Z",
     "iopub.status.idle": "2021-03-08T20:49:56.565791Z",
     "shell.execute_reply": "2021-03-08T20:49:56.565149Z"
    },
    "papermill": {
     "duration": 2.67231,
     "end_time": "2021-03-08T20:49:56.565965",
     "exception": false,
     "start_time": "2021-03-08T20:49:53.893655",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(history.history['precision_m'])\n",
    "plt.plot(history.history['val_precision_m'])\n",
    "\n",
    "plt.title('model precision')\n",
    "plt.ylabel('precision')\n",
    "plt.xlabel('epoch')\n",
    "plt.legend(['train','val'], loc='upper left')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 2.53682,
     "end_time": "2021-03-08T20:50:01.656192",
     "exception": false,
     "start_time": "2021-03-08T20:49:59.119372",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Recall"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:50:06.652356Z",
     "iopub.status.busy": "2021-03-08T20:50:06.651686Z",
     "iopub.status.idle": "2021-03-08T20:50:06.836164Z",
     "shell.execute_reply": "2021-03-08T20:50:06.836707Z"
    },
    "papermill": {
     "duration": 2.677858,
     "end_time": "2021-03-08T20:50:06.836900",
     "exception": false,
     "start_time": "2021-03-08T20:50:04.159042",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(history.history['recall_m'])\n",
    "plt.plot(history.history['val_recall_m'])\n",
    "\n",
    "plt.title('model recall')\n",
    "plt.ylabel('recall')\n",
    "plt.xlabel('epoch')\n",
    "plt.legend(['train','val'], loc='upper left')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 2.484052,
     "end_time": "2021-03-08T20:50:11.865829",
     "exception": false,
     "start_time": "2021-03-08T20:50:09.381777",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### F1 Score"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:50:16.948023Z",
     "iopub.status.busy": "2021-03-08T20:50:16.947401Z",
     "iopub.status.idle": "2021-03-08T20:50:17.140241Z",
     "shell.execute_reply": "2021-03-08T20:50:17.139581Z"
    },
    "papermill": {
     "duration": 2.737824,
     "end_time": "2021-03-08T20:50:17.140404",
     "exception": false,
     "start_time": "2021-03-08T20:50:14.402580",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(history.history['f1_m'])\n",
    "plt.plot(history.history['val_f1_m'])\n",
    "\n",
    "plt.title('model F1')\n",
    "plt.ylabel('f1')\n",
    "plt.xlabel('epoch')\n",
    "plt.legend(['train','val'], loc='upper left')\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 2.474951,
     "end_time": "2021-03-08T20:50:22.113647",
     "exception": false,
     "start_time": "2021-03-08T20:50:19.638696",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "It seems like a very good model. The training and validation shows good results and are both always close to each other. Also the model keeps improving each epoch."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 2.530014,
     "end_time": "2021-03-08T20:50:27.172366",
     "exception": false,
     "start_time": "2021-03-08T20:50:24.642352",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<a id=\"TE\"></a>\n",
    "## 8.2 - Test Evaluate"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 2.532635,
     "end_time": "2021-03-08T20:50:32.225770",
     "exception": false,
     "start_time": "2021-03-08T20:50:29.693135",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Now let's evaluate in the training and in testing dfs."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 80,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:50:37.339102Z",
     "iopub.status.busy": "2021-03-08T20:50:37.338141Z",
     "iopub.status.idle": "2021-03-08T20:51:02.686091Z",
     "shell.execute_reply": "2021-03-08T20:51:02.686658Z"
    },
    "papermill": {
     "duration": 27.939511,
     "end_time": "2021-03-08T20:51:02.686888",
     "exception": false,
     "start_time": "2021-03-08T20:50:34.747377",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1890/1890 [==============================] - 21s 11ms/step - loss: 0.1518 - acc: 0.9126 - f1_m: 0.9121 - precision_m: 0.9328 - recall_m: 0.8932\n",
      "318/318 [==============================] - 4s 12ms/step - loss: 0.5557 - acc: 0.7416 - f1_m: 0.7374 - precision_m: 0.7574 - recall_m: 0.7192\n"
     ]
    }
   ],
   "source": [
    "score_train = model.evaluate(X_ov[:,:20], y_ov, verbose=1)\n",
    "score_test = model.evaluate(X_test[:,:20], y_test, verbose=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:51:08.017734Z",
     "iopub.status.busy": "2021-03-08T20:51:08.016713Z",
     "iopub.status.idle": "2021-03-08T20:51:08.039747Z",
     "shell.execute_reply": "2021-03-08T20:51:08.040418Z"
    },
    "papermill": {
     "duration": 2.685126,
     "end_time": "2021-03-08T20:51:08.040613",
     "exception": false,
     "start_time": "2021-03-08T20:51:05.355487",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Loss</th>\n",
       "      <th>Accuracy</th>\n",
       "      <th>Precision</th>\n",
       "      <th>Recall</th>\n",
       "      <th>F1-Score</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Train Score</th>\n",
       "      <td>0.151843</td>\n",
       "      <td>0.912581</td>\n",
       "      <td>0.932814</td>\n",
       "      <td>0.893188</td>\n",
       "      <td>0.912133</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Test Score</th>\n",
       "      <td>0.555691</td>\n",
       "      <td>0.741571</td>\n",
       "      <td>0.757399</td>\n",
       "      <td>0.719191</td>\n",
       "      <td>0.737436</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                 Loss  Accuracy  Precision    Recall  F1-Score\n",
       "Train Score  0.151843  0.912581   0.932814  0.893188  0.912133\n",
       "Test Score   0.555691  0.741571   0.757399  0.719191  0.737436"
      ]
     },
     "execution_count": 81,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "score = pd.DataFrame({'Loss':[score_train[0],score_test[0]],\n",
    "             'Accuracy':[score_train[1],score_test[1]],\n",
    "             'Precision':[score_train[3],score_test[3]],\n",
    "             'Recall':[score_train[4],score_test[4]],\n",
    "             'F1-Score':[score_train[2],score_test[2]]\n",
    "                     },\n",
    "             index=['Train Score','Test Score'])\n",
    "\n",
    "score"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 2.682453,
     "end_time": "2021-03-08T20:51:13.365607",
     "exception": false,
     "start_time": "2021-03-08T20:51:10.683154",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Low Loss but high in the test, good Accuracy, Precision, Recall and F1-score for both data frames. Excellent! :)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 2.619368,
     "end_time": "2021-03-08T20:51:18.589257",
     "exception": false,
     "start_time": "2021-03-08T20:51:15.969889",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<a id=\"TF\"></a>\n",
    "## 8.3 - Test Function"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 2.609135,
     "end_time": "2021-03-08T20:51:23.885912",
     "exception": false,
     "start_time": "2021-03-08T20:51:21.276777",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "For the final test we will build a function that puts everything that we learned into context.\n",
    " The following function will apply our pipeline for text preprocessing, classify a comment with our model and will return if the comment  is Positive, Negative or Neutral.\n",
    "\n",
    "Let's see if the model is really accurate in real world comments. üòè"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:51:29.184536Z",
     "iopub.status.busy": "2021-03-08T20:51:29.183424Z",
     "iopub.status.idle": "2021-03-08T20:51:29.186153Z",
     "shell.execute_reply": "2021-03-08T20:51:29.186667Z"
    },
    "papermill": {
     "duration": 2.640057,
     "end_time": "2021-03-08T20:51:29.186884",
     "exception": false,
     "start_time": "2021-03-08T20:51:26.546827",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def sentiment_analysis(text, pipeline, model):\n",
    "    \n",
    "    # Applying the pipeline\n",
    "    if type(text) is not list:\n",
    "        text = [text]\n",
    "        text_prep = text_prep_pipeline.fit_transform(text)\n",
    "        text_prep = tokenizer.texts_to_sequences(text_prep)\n",
    "        matrix = pad_sequences(text_prep, padding='post', maxlen=20)\n",
    "        # Predicting sentiment\n",
    "        proba = model.predict(matrix)\n",
    "    \n",
    "    \n",
    "    # Plotting the sentiment and its score\n",
    "    fig, ax = plt.subplots(figsize=(5, 3))\n",
    "    \n",
    "    if proba.argmax() == 0 :\n",
    "        text = 'Negative'\n",
    "        class_proba = int(proba[0][0].round(2)*100)\n",
    "        color = 'Crimson'\n",
    "        \n",
    "    elif proba.argmax() == 1 :\n",
    "        text = 'Neutral'\n",
    "        class_proba = int(proba[0][1].round(2)*100) \n",
    "        color = 'Lightgrey'\n",
    "       \n",
    "    elif proba.argmax() == 2 :\n",
    "        text = 'Positive'\n",
    "        class_proba = int(proba[0][2].round(2)*100) \n",
    "        color = 'DeepSkyBlue'\n",
    "        \n",
    "    ax.text(0.5, 0.5, text, fontsize=50, ha='center', color=color)\n",
    "    ax.text(0.5, 0.20, str(class_proba) + '%', fontsize=14, ha='center')\n",
    "    ax.axis('off')\n",
    "    ax.set_title('Sentiment Analysis', fontsize=14)\n",
    "    plt.show()\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:51:34.569469Z",
     "iopub.status.busy": "2021-03-08T20:51:34.568476Z",
     "iopub.status.idle": "2021-03-08T20:51:34.572071Z",
     "shell.execute_reply": "2021-03-08T20:51:34.572509Z"
    },
    "papermill": {
     "duration": 2.735899,
     "end_time": "2021-03-08T20:51:34.572677",
     "exception": false,
     "start_time": "2021-03-08T20:51:31.836778",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#Positive\n",
    "\n",
    "comment = \"The prices are amazing and the shipping is really fast! Thank for everything amazon!\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:51:39.816084Z",
     "iopub.status.busy": "2021-03-08T20:51:39.815088Z",
     "iopub.status.idle": "2021-03-08T20:51:40.275534Z",
     "shell.execute_reply": "2021-03-08T20:51:40.275017Z"
    },
    "papermill": {
     "duration": 3.084675,
     "end_time": "2021-03-08T20:51:40.275691",
     "exception": false,
     "start_time": "2021-03-08T20:51:37.191016",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x216 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sentiment_analysis(comment, pipeline=text_prep_pipeline,  model=model)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:51:45.629802Z",
     "iopub.status.busy": "2021-03-08T20:51:45.629140Z",
     "iopub.status.idle": "2021-03-08T20:51:45.632042Z",
     "shell.execute_reply": "2021-03-08T20:51:45.631524Z"
    },
    "papermill": {
     "duration": 2.633193,
     "end_time": "2021-03-08T20:51:45.632184",
     "exception": false,
     "start_time": "2021-03-08T20:51:42.998991",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Negative\n",
    "\n",
    "comment = \"I lost my money. I contact the custom service and they tell to wait receive item but not received yet\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:51:50.945684Z",
     "iopub.status.busy": "2021-03-08T20:51:50.944884Z",
     "iopub.status.idle": "2021-03-08T20:51:51.041917Z",
     "shell.execute_reply": "2021-03-08T20:51:51.041249Z"
    },
    "papermill": {
     "duration": 2.733814,
     "end_time": "2021-03-08T20:51:51.042073",
     "exception": false,
     "start_time": "2021-03-08T20:51:48.308259",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 360x216 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sentiment_analysis(comment, pipeline=text_prep_pipeline, model=model)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:51:56.379515Z",
     "iopub.status.busy": "2021-03-08T20:51:56.378836Z",
     "iopub.status.idle": "2021-03-08T20:51:56.381807Z",
     "shell.execute_reply": "2021-03-08T20:51:56.381318Z"
    },
    "papermill": {
     "duration": 2.67982,
     "end_time": "2021-03-08T20:51:56.381965",
     "exception": false,
     "start_time": "2021-03-08T20:51:53.702145",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Neutral\n",
    "comment = \"Overall app is ok. But i really want some improvements in the next update.\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-03-08T20:52:01.618549Z",
     "iopub.status.busy": "2021-03-08T20:52:01.617715Z",
     "iopub.status.idle": "2021-03-08T20:52:01.712445Z",
     "shell.execute_reply": "2021-03-08T20:52:01.711914Z"
    },
    "papermill": {
     "duration": 2.716918,
     "end_time": "2021-03-08T20:52:01.712597",
     "exception": false,
     "start_time": "2021-03-08T20:51:58.995679",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 360x216 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sentiment_analysis(text=comment, pipeline=text_prep_pipeline, model=model)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 2.715305,
     "end_time": "2021-03-08T20:52:07.118830",
     "exception": false,
     "start_time": "2021-03-08T20:52:04.403525",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Yes! :')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 2.69896,
     "end_time": "2021-03-08T20:52:12.483424",
     "exception": false,
     "start_time": "2021-03-08T20:52:09.784464",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "<a id=\"CON\"></a>\n",
    "# 9 - Conclusion "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "papermill": {
     "duration": 2.667396,
     "end_time": "2021-03-08T20:52:17.789895",
     "exception": false,
     "start_time": "2021-03-08T20:52:15.122499",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "We just built a very good Keras Deep Learn model for Multi-label Text Classification. Accomplishing the main objective of this project.\n",
    " \n",
    "That was more painful than it seemed, haha. I have tried several times until find a good result with neural networks however fortunately I found  the [Python for NLP: Multi-label Text Classification with Keras](https://stackabuse.com/python-for-nlp-multi-label-text-classification-with-keras/) article that helps me a lot! I really want to thank the [Usman Malik](https://twitter.com/usman_malikk), for writing it. That was essential to accomplish that result in this project. \n",
    " \n",
    "I'm open to all improvements, rewording or criticism. Please don't hesitate to leave me a comment and If you liked this notebook, please upvote and leave your feedback in the comments!\n",
    " \n",
    "It motivates me a lot to keep doing those types of projects and sharing here.\n",
    " \n",
    "That's it for now.\n",
    " \n",
    " \n",
    "Cheers üçÄ\n",
    "\n",
    "[Back To Top](#top)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "papermill": {
     "duration": 2.614771,
     "end_time": "2021-03-08T20:52:23.031120",
     "exception": false,
     "start_time": "2021-03-08T20:52:20.416349",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.9"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 2806.720154,
   "end_time": "2021-03-08T20:52:27.939495",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2021-03-08T20:05:41.219341",
   "version": "2.2.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
